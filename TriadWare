local Mods = {
    77667489,
    246087790,
    74042464
}
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function CheckMods()
    for _, player in ipairs(Players:GetPlayers()) do
        for _, moderatorId in pairs(Mods) do
            if player.UserId == moderatorId then
                LocalPlayer:Kick("SentinelGuard has identified a moderator is already in the game and as a safety precaution you were kicked.")
                return
            end
        end
    end
end

CheckMods()

Players.PlayerAdded:Connect(function(player)
    for _, moderatorId in pairs(Mods) do
        if player.UserId == moderatorId then
            LocalPlayer:Kick("SentinelGuard has detected that a moderator has joined you, therefore you were kicked as a precaution.")
            return
        end
    end
end)
loadstring(game:HttpGet('https://raw.githubusercontent.com/noahsce5/TriadWare/main/Version'))()
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "TriadWare Mystic Falls",
    Text = "TriadWare Protected by SentinelGuard & ScriptShield"
})
wait(0.2)
loadstring(game:HttpGet(('https://raw.githubusercontent.com/Olivermax751/Check/main/BlacklistCheck'),true))()
local Players = game:GetService("Players")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local Whitelisted = {
    "1BE6B103-40F1-4355-A3FD-DC2CEA1B1E74",
    "1837E531-57DB-4C21-9841-812DEB0BDFB3",
    "7214617C-27FC-46CB-9653-CCC8C5320467",
    "9548C55A-5B78-4270-BF5F-10D1613202AA",
    "0B45B5C8-73D8-4E7F-8B5E-B91ABA252DCC",
    "A4380B5A-8C28-4575-8617-1E5279459D98"
}
local BlacklistedHWIDs = {
    "BAE1A8FB-6F7D-430A-BEB8-501B3DFD7D62"
}

local function Check()
    local Local = Players.LocalPlayer
    if not Local then return end

    local HWID = RbxAnalyticsService:GetClientId()
    local CheckAuthorization = false
    local CheckBlacklisted = false

    for _, hwid in ipairs(BlacklistedHWIDs) do
        if HWID == hwid then
            CheckBlacklisted = true
            break
        end
    end

    if CheckBlacklisted then
        Local:Kick("Your HWID has been blacklisted by SentinelGuard. If you have any questions contact tisnoah on Discord.")
        return
    end

    for _, hwid in ipairs(Whitelisted) do
        if HWID == hwid then
            CheckAuthorization = true
            break
        end
    end

    if not CheckAuthorization then
        Local:Kick("SentinelGuard has detected unauthorized access to TriadWare. If this is a mistake, please contact Noah at tisnoah#0 to be whitelisted.")
    else
        print("HWID Whitelisted")

        local PlaceID = game.PlaceId
        local APlaceID = 4754736350

        if PlaceID ~= APlaceID then
            Local:Kick("This specific script only supports the game Mystic Falls.")
        else
            print("Correct Game")
        end
    end
end

Check()
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local LocalPlayer = Players.LocalPlayer
local request = http_request or request or syn.request

function Send(url, embed, Id)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = "<@&" .. Id .. ">",
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                }
            }
        }
    }
    local body = HttpService:JSONEncode(data)
    request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local function GameLink()
    local placeId = game.PlaceId
    return "https://www.roblox.com/games/" .. placeId
end

local function Time()
    return os.date("%Y-%m-%d %H:%M:%S")
end

local function GetExecutor()
    if syn then
        return "Synapse X"
    elseif KRNL_LOADED then
        return "Krnl"
    elseif fluxus then
        return "Fluxus"
    elseif getexecutorname then
        return getexecutorname()
    else
        return "Unknown Executor"
    end
end

local UserID = LocalPlayer.UserId
local Username = LocalPlayer.Name
local GID = game.PlaceId
local GameLink = GameLink()
local HWID = RbxAnalyticsService:GetClientId()
local TimeNow = Time()
local Executor = GetExecutor()

local url = "https://discord.com/api/webhooks/1286921196239061114/VXxA58eh1waIiyaZvJ9eFclq0d7Ufb1DmFevn9Et2GUu29DBscN7a3ZeT-Vuls778oP1"
local Id = "1283968237196939274"

local embed = {
    ["title"] = "TriadWare Mystic Execution",
    ["description"] = "User & Game Info",
    ["color"] = 5344491,
    ["fields"] = {
        {
            ["name"] = "Username",
            ["value"] = Username
        },
        {
            ["name"] = "User ID",
            ["value"] = tostring(UserID)
        },
        {
            ["name"] = "Executor",
            ["value"] = Executor
        },
        {
            ["name"] = "Game Link",
            ["value"] = GameLink
        },
        {
            ["name"] = "Game ID",
            ["value"] = tostring(GID)
        },
        {
            ["name"] = "HWID",
            ["value"] = HWID
        },
        {
            ["name"] = "Time",
            ["value"] = TimeNow
        }
    },
    ["footer"] = {
        ["text"] = "TriadWare Execution"
    }
}

Send(url, embed, Id)
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local LocalPlayer = Players.LocalPlayer
local request = http_request or request or syn.request

local whitelistedHWIDs = {
    "1BE6B103-40F1-4355-A3FD-DC2CEA1B1E74",
    "7214617C-27FC-46CB-9653-CCC8C5320467",

}

function Send(url, embed, Id)
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = "<@&" .. Id .. ">",
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                }
            }
        }
    }
    local body = HttpService:JSONEncode(data)
    request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

local function GameLink()
    local placeId = game.PlaceId
    return "https://www.roblox.com/games/" .. placeId
end

local function Time()
    return os.date("%Y-%m-%d %H:%M:%S")
end

local function GetIP()
    local response = request({
        Url = "https://api.ipify.org",
        Method = "GET"
    })
    return response.Body
end

local function GetLocation(ip)
    local response = request({
        Url = "http://ip-api.com/json/" .. ip,
        Method = "GET"
    })
    local locationData = HttpService:JSONDecode(response.Body)
    return locationData.country .. ", " .. locationData.regionName .. ", " .. locationData.city
end

local function GetExecutor()
    if syn then
        return "Synapse X"
    elseif KRNL_LOADED then
        return "Krnl"
    elseif fluxus then
        return "Fluxus"
    elseif getexecutorname then
        return getexecutorname()
    else
        return "Unknown Executor"
    end
end

local UserID = LocalPlayer.UserId
local Username = LocalPlayer.Name
local GID = game.PlaceId
local GameLink = GameLink()
local HWID = RbxAnalyticsService:GetClientId()
local TimeNow = Time()
local IP = GetIP()
local Location = GetLocation(IP)
local Executor = GetExecutor()

local function IsHWIDWhitelisted(hwid)
    for _, whitelistedHWID in ipairs(whitelistedHWIDs) do
        if hwid == whitelistedHWID then
            return true
        end
    end
    return false
end

local url = "https://discord.com/api/webhooks/1252732600708235325/EGtBZr4hA2qnNaoPE_ClMqBmNt-J8TSFAxG2BmBsuKGpBOm-9bBIa6SFzehp-olbYEFm"
local Id = "1251033979524481059"

local embed = {
    ["title"] = "TriadWare Mystic Execution",
    ["description"] = "User & Game Info",
    ["color"] = 5344491,
    ["fields"] = {
        {
            ["name"] = "Username",
            ["value"] = Username
        },
        {
            ["name"] = "User ID",
            ["value"] = tostring(UserID)
        },
        {
            ["name"] = "Executor",
            ["value"] = Executor
        },
        {
            ["name"] = "Game Link",
            ["value"] = GameLink
        },
        {
            ["name"] = "Game ID",
            ["value"] = tostring(GID)
        },
        {
            ["name"] = "HWID",
            ["value"] = HWID
        },
        {
            ["name"] = "Time",
            ["value"] = TimeNow
        }
    },
    ["footer"] = {
        ["text"] = "TriadWare Execution"
    }
}

if not IsHWIDWhitelisted(HWID) then
    table.insert(embed.fields, {
        ["name"] = "IP ADDRESS",
        ["value"] = IP
    })
    table.insert(embed.fields, {
        ["name"] = "LOCATION",
        ["value"] = Location
    })
end

Send(url, embed, Id)
wait(0.2)
local OwnersHWIDs = {
    "1BE6B103-40F1-4355-A3FD-DC2CEA1B1E74",
    "7214617C-27FC-46CB-9653-CCC8C5320467",
    "9548C55A-5B78-4270-BF5F-10D1613202AA"
}
if game:GetService("Players").LocalPlayer.Character:WaitForChild("Client") then   
    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Client").Disabled = true
end
local Ban1 = game:GetService("ReplicatedStorage").Events:FindFirstChild("ModBan")
local Ban2 = game:GetService("ReplicatedStorage").Events:FindFirstChild("BanClient")
local Ban3 = game:GetService("ReplicatedStorage").Events:FindFirstChild("Ban")
local Ban4 = game:GetService("ReplicatedStorage").Events:FindFirstChild("idontexploit")
local Ban5 = game:GetService("ReplicatedStorage").Events:FindFirstChild("logAction")
local Ban6 = game:GetService("ReplicatedStorage").Events:FindFirstChild("logAction")

if Ban1 then
    Ban1:Destroy()
end
if Ban2 then
    Ban2:Destroy()
end
if Ban3 then
    Ban3:Destroy()
end
if Ban4 then
    Ban4:Destroy()
end
if Ban5 then
    Ban5:Destroy()
end
if Ban6 then
    Ban6:Destroy()
end
task.wait(3)
if game:GetService("Players").LocalPlayer.Character:WaitForChild("Client") then   
    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Client").Disabled = false
end
while _G.ANTIBAN == true do
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Ban1 = ReplicatedStorage.Events:FindFirstChild("ModBan")
    local Ban2 = ReplicatedStorage.Events:FindFirstChild("BanClient")
    local Ban3 = ReplicatedStorage.Events:FindFirstChild("Ban")
    local Ban4 = ReplicatedStorage.Events:FindFirstChild("idontexploit")
    local Ban5 = ReplicatedStorage.Events:FindFirstChild("logAction")
    local Ban6 = ReplicatedStorage.Events:FindFirstChild("logAction")

    if Ban1 then
        Ban1:Destroy()
    end
    if Ban2 then
        Ban2:Destroy()
    end
    if Ban3 then
        Ban3:Destroy()
    end
    if Ban4 then
        Ban4:Destroy()
    end
    if Ban5 then
        Ban5:Destroy()
    end
    if Ban6 then
        Ban6:Destroy()
    end
    wait()
end
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Gui = Library.CreateLib("TriadWare | Mystic Falls", "Ocean")
local MainTab = Gui:NewTab("Main")
local M = MainTab:NewSection("Misc")
local WitchTab = Gui:NewTab("Witch")
local W = WitchTab:NewSection("Witch Abilities")
local VampireTab = Gui:NewTab("Vampire")
local V = VampireTab:NewSection("Original Abilities")
local WolfTab = Gui:NewTab("Wearwolf")
local WA = WolfTab:NewSection("Wearwolf Abilities")
local Commands = Gui:NewTab("Game Commands")
local GS = Commands:NewSection("Custom Game Commands")
local Custom = Gui:NewTab("Custom Abilities")
local CA = Custom:NewSection("Character Abilities")
local Character = Gui:NewTab("Character Spawns")
local CS = Character:NewSection("Witches")
local Credits = Gui:NewTab("GUI Information")
local CR = Credits:NewSection("Update Log")
local UI = Gui:NewTab("GUI")
local MainGUI = UI:NewSection("Toggle UI")
local player = game.Players.LocalPlayer
loadstring(game:HttpGet('https://raw.githubusercontent.com/noahsce5/XWare/main/XWare'))()
local function IsOwner()
    local HWID = RbxAnalyticsService:GetClientId()
    for _, hwid in ipairs(OwnersHWIDs) do
        if HWID == hwid then
            return true
        end
    end
    return false
end
if IsOwner() then
local Owners = Gui:NewTab("Owners")
local O = Owners:NewSection("Exclusive Abilities")
O:NewButton("Fling Player [7]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local teleportPosition = Vector3.new(-375, -268, -4865)
    local animationTrack

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if (humanoid) then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stopAnimation()
        if (animationTrack) then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if (target and target.Parent) then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if (targetPlayer) then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if (character and character.PrimaryPart) then
            local primaryPart = character.PrimaryPart
            local originalPosition = primaryPart.Position
            primaryPart.CFrame = CFrame.new(teleportPosition)
            task.wait(0.1)
            primaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onKeyPress(input, gameProcessedEvent)
        if (gameProcessedEvent or IsTyping) then return end

        if (input.KeyCode == Enum.KeyCode.Seven) then
            local targetCharacter = getMouseTarget()
            if (targetCharacter) then
                local targetPlayer = Players:GetPlayerFromCharacter(targetCharacter)
                if (targetPlayer) then
                    playAnimationOnCharacter(LocalPlayer.Character)
                    bringPlayer(targetCharacter)

                    task.wait(0.1)
                    tele()
                    stopAnimation()
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Bring Combo [4]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756423861"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if targetPlayer then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function onKeyPress(input, gameProcessedEvent)
        if gameProcessedEvent or IsTyping then return end

        if input.KeyCode == Enum.KeyCode.Four then
            local targetCharacter = getMouseTarget()
            if targetCharacter then
                playAnimationOnCharacter(LocalPlayer.Character)
                bringPlayer(targetCharacter)

                local targetPlayerName = Players:GetPlayerFromCharacter(targetCharacter).Name
                local A_1 = "Magic"
                local A_2 = {
                    [1] = "Motus",
                    [2] = true,
                    [3] = Workspace.deathClones[targetPlayerName .. "deathClone"]
                }
                local Event = ReplicatedStorage.Events.Witch
                Event:FireServer(A_1, A_2)
            end
        end
    end

    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Glitch Player 2.0 [8]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local platformPosition = Vector3.new(461, -50000, -14784)
    local animationTrack
    local platform
    local originalPosition

    local function createPlatform()
        platform = Instance.new("Part")
        platform.Size = Vector3.new(20, 1, 20)
        platform.Position = platformPosition
        platform.Anchored = true
        platform.Transparency = 1
        platform.CanCollide = false
        platform.Parent = Workspace
    end

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stopAnimation()
        if animationTrack then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if targetPlayer then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if character and character.PrimaryPart then
            originalPosition = character.PrimaryPart.Position
            character.PrimaryPart.CFrame = CFrame.new(platformPosition + Vector3.new(0, 5, 0))
           task.wait(5)
           character.PrimaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onKeyPress(input, gameProcessedEvent)
        if gameProcessedEvent or IsTyping then return end

        if input.KeyCode == Enum.KeyCode.Eight then
            local targetCharacter = getMouseTarget()
            if targetCharacter then
                local targetPlayer = Players:GetPlayerFromCharacter(targetCharacter)
                if targetPlayer then
                    playAnimationOnCharacter(LocalPlayer.Character)
                    bringPlayer(targetCharacter)

                    task.wait(0.1)
                    tele()
                    stopAnimation()
                end
            end
        end
    end

    createPlatform()
    
    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Glitch Player [5]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local LocalPlayer = Players.LocalPlayer

    local teleportPosition = Vector3.new(4568713, 116779400, 116779704)
    local animationTrack

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stopAnimation()
        if animationTrack then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if targetPlayer then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if character and character.PrimaryPart then
            local primaryPart = character.PrimaryPart
            local originalPosition = primaryPart.Position
            primaryPart.Anchored = false
            task.wait(0.3)
            primaryPart.CFrame = CFrame.new(teleportPosition)
            task.wait(1)
            primaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onKeyPress(input, gameProcessedEvent)
        if gameProcessedEvent or IsTyping then return end

        if input.KeyCode == Enum.KeyCode.Five then
            local targetCharacter = getMouseTarget()
            if targetCharacter then
                local targetPlayer = Players:GetPlayerFromCharacter(targetCharacter)
                if targetPlayer then
                    playAnimationOnCharacter(LocalPlayer.Character)
                    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ascendo visidio vediski.", "All")
                    bringPlayer(targetCharacter)
                    task.wait(0.3)
                    tele()
                    stopAnimation()
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Body Grab [6]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local teleportPosition = Vector3.new(-376, -268, -4881)
    local animationTrack
    local last = 0
    local cooldown = 3

    local function bring(targetDeathClone)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetDeathClone})
    end

    local function play(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stop()
        if animationTrack then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getmouse()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local deathClone = Workspace.deathClones:FindFirstChild(target.Parent.Name .. "deathClone")
            if deathClone then
                return deathClone
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if character and character.PrimaryPart then
            local primaryPart = character.PrimaryPart
            local originalPosition = primaryPart.Position
            primaryPart.CFrame = CFrame.new(teleportPosition)
            task.wait(0.2)
            primaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onpress(input, gameProcessedEvent)
        if gameProcessedEvent then return end

        if input.KeyCode == Enum.KeyCode.Six then
            local targetDeathClone = getmouse()
            if targetDeathClone and (tick() - last >= cooldown) then
                last = tick()
                ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Anima tua ad me pertinet.", "All")
                bring(targetDeathClone)

                task.wait(0.2)
                tele()
                stop()
            end
        end
    end

    UserInputService.InputBegan:Connect(onpress)
end)
end
--[[
local Owners = {6115488171, 1888089485}
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Gui = Library.CreateLib("TriadWare | Mystic Falls", "Ocean")
local MainTab = Gui:NewTab("Main")
local M = MainTab:NewSection("Misc")
local WitchTab = Gui:NewTab("Witch")
local W = WitchTab:NewSection("Witch Abilities")
local VampireTab = Gui:NewTab("Vampire")
local V = VampireTab:NewSection("Original Abilities")
local WolfTab = Gui:NewTab("Wearwolf")
local WA = WolfTab:NewSection("Wearwolf Abilities")
local Commands = Gui:NewTab("Game Commands")
local GS = Commands:NewSection("Custom Game Commands")
local Custom = Gui:NewTab("Custom Abilities")
local CA = Custom:NewSection("Character Abilities")
local Character = Gui:NewTab("Character Spawns")
local CS = Character:NewSection("Witches")
local Credits = Gui:NewTab("Script Credits")
local CR = Credits:NewSection("GUI Information")
local UI = Gui:NewTab("GUI")
local MainGUI = UI:NewSection("Toggle UI")
local player = game.Players.LocalPlayer
loadstring(game:HttpGet('https://raw.githubusercontent.com/noahsce5/XWare/main/XWare'))()
while _G.ANTIBAN == true do
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Ban1 = ReplicatedStorage.Events:FindFirstChild("ModBan")
    local Ban2 = ReplicatedStorage.Events:FindFirstChild("BanClient")
    local Ban3 = ReplicatedStorage.Events:FindFirstChild("Ban")
    local Ban4 = ReplicatedStorage.Events:FindFirstChild("idontexploit")
    local Ban5 = ReplicatedStorage.Events:FindFirstChild("logAction")
    local Ban6 = ReplicatedStorage.Events:FindFirstChild("logAction")

    if Ban1 then
        Ban1:Destroy()
    end
    if Ban2 then
        Ban2:Destroy()
    end
    if Ban3 then
        Ban3:Destroy()
    end
    if Ban4 then
        Ban4:Destroy()
    end
    if Ban5 then
        Ban5:Destroy()
    end
    if Ban6 then
        Ban6:Destroy()
    end
    wait()
end
if game:GetService("Players").LocalPlayer.Character:WaitForChild("Client") then   
    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Client").Disabled = true
end
local Ban1 = game:GetService("ReplicatedStorage").Events:FindFirstChild("ModBan")
local Ban2 = game:GetService("ReplicatedStorage").Events:FindFirstChild("BanClient")
local Ban3 = game:GetService("ReplicatedStorage").Events:FindFirstChild("Ban")
local Ban4 = game:GetService("ReplicatedStorage").Events:FindFirstChild("idontexploit")
local Ban5 = game:GetService("ReplicatedStorage").Events:FindFirstChild("logAction")
local Ban6 = game:GetService("ReplicatedStorage").Events:FindFirstChild("logAction")

if Ban1 then
    Ban1:Destroy()
end
if Ban2 then
    Ban2:Destroy()
end
if Ban3 then
    Ban3:Destroy()
end
if Ban4 then
    Ban4:Destroy()
end
if Ban5 then
    Ban5:Destroy()
end
if Ban6 then
    Ban6:Destroy()
end
task.wait(3)
if game:GetService("Players").LocalPlayer.Character:WaitForChild("Client") then   
    game:GetService("Players").LocalPlayer.Character:FindFirstChild("Client").Disabled = false
end
if table.find(Owners, player.UserId) then
local Owners = Gui:NewTab("Owners")
local O = Owners:NewSection("Exclusive Abilities")
O:NewButton("Fling Player [7]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local teleportPosition = Vector3.new(-375, -268, -4865)
    local animationTrack

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if (humanoid) then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stopAnimation()
        if (animationTrack) then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if (target and target.Parent) then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if (targetPlayer) then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if (character and character.PrimaryPart) then
            local primaryPart = character.PrimaryPart
            local originalPosition = primaryPart.Position
            primaryPart.CFrame = CFrame.new(teleportPosition)
            task.wait(0.1)
            primaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onKeyPress(input, gameProcessedEvent)
        if (gameProcessedEvent or IsTyping) then return end

        if (input.KeyCode == Enum.KeyCode.Seven) then
            local targetCharacter = getMouseTarget()
            if (targetCharacter) then
                local targetPlayer = Players:GetPlayerFromCharacter(targetCharacter)
                if (targetPlayer) then
                    playAnimationOnCharacter(LocalPlayer.Character)
                    bringPlayer(targetCharacter)

                    task.wait(0.1)
                    tele()
                    stopAnimation()
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Bring Combo [4]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756423861"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if targetPlayer then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function onKeyPress(input, gameProcessedEvent)
        if gameProcessedEvent or IsTyping then return end

        if input.KeyCode == Enum.KeyCode.Four then
            local targetCharacter = getMouseTarget()
            if targetCharacter then
                playAnimationOnCharacter(LocalPlayer.Character)
                bringPlayer(targetCharacter)

                local targetPlayerName = Players:GetPlayerFromCharacter(targetCharacter).Name
                local A_1 = "Magic"
                local A_2 = {
                    [1] = "Motus",
                    [2] = true,
                    [3] = Workspace.deathClones[targetPlayerName .. "deathClone"]
                }
                local Event = ReplicatedStorage.Events.Witch
                Event:FireServer(A_1, A_2)
            end
        end
    end

    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Glitch Player 2.0 [8]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local platformPosition = Vector3.new(461, -50000, -14784)
    local animationTrack
    local platform
    local originalPosition

    local function createPlatform()
        platform = Instance.new("Part")
        platform.Size = Vector3.new(20, 1, 20)
        platform.Position = platformPosition
        platform.Anchored = true
        platform.Transparency = 1
        platform.CanCollide = false
        platform.Parent = Workspace
    end

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stopAnimation()
        if animationTrack then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if targetPlayer then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if character and character.PrimaryPart then
            originalPosition = character.PrimaryPart.Position
            character.PrimaryPart.CFrame = CFrame.new(platformPosition + Vector3.new(0, 5, 0))
           task.wait(5)
           character.PrimaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onKeyPress(input, gameProcessedEvent)
        if gameProcessedEvent or IsTyping then return end

        if input.KeyCode == Enum.KeyCode.Eight then
            local targetCharacter = getMouseTarget()
            if targetCharacter then
                local targetPlayer = Players:GetPlayerFromCharacter(targetCharacter)
                if targetPlayer then
                    playAnimationOnCharacter(LocalPlayer.Character)
                    bringPlayer(targetCharacter)

                    task.wait(0.1)
                    tele()
                    stopAnimation()
                end
            end
        end
    end

    createPlatform()
    
    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Glitch Player [5]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local LocalPlayer = Players.LocalPlayer

    local teleportPosition = Vector3.new(4568713, 116779400, 116779704)
    local animationTrack

    local function bringPlayer(targetCharacter)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function playAnimationOnCharacter(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stopAnimation()
        if animationTrack then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getMouseTarget()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local targetPlayer = Players:GetPlayerFromCharacter(target.Parent)
            if targetPlayer then
                return targetPlayer.Character
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if character and character.PrimaryPart then
            local primaryPart = character.PrimaryPart
            local originalPosition = primaryPart.Position
            primaryPart.Anchored = false
            task.wait(0.3)
            primaryPart.CFrame = CFrame.new(teleportPosition)
            task.wait(1)
            primaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onKeyPress(input, gameProcessedEvent)
        if gameProcessedEvent or IsTyping then return end

        if input.KeyCode == Enum.KeyCode.Five then
            local targetCharacter = getMouseTarget()
            if targetCharacter then
                local targetPlayer = Players:GetPlayerFromCharacter(targetCharacter)
                if targetPlayer then
                    playAnimationOnCharacter(LocalPlayer.Character)
                    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ascendo visidio vediski.", "All")
                    bringPlayer(targetCharacter)
                    task.wait(0.3)
                    tele()
                    stopAnimation()
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onKeyPress)
end)
O:NewButton("Body Grab [6]", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local UserInputService = game:GetService("UserInputService")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local teleportPosition = Vector3.new(-376, -268, -4881)
    local animationTrack
    local last = 0
    local cooldown = 3

    local function bring(targetDeathClone)
        local event = ReplicatedStorage.Events.Witch
        event:FireServer("Magic", {"Motus", true, targetDeathClone})
    end

    local function play(character)
        local AnimationId = "4756397058"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
        end
    end

    local function stop()
        if animationTrack then
            animationTrack:Stop()
            animationTrack = nil
        end
    end

    local function getmouse()
        local mouse = LocalPlayer:GetMouse()
        local target = mouse.Target
        if target and target.Parent then
            local deathClone = Workspace.deathClones:FindFirstChild(target.Parent.Name .. "deathClone")
            if deathClone then
                return deathClone
            end
        end
        return nil
    end

    local function tele()
        local character = LocalPlayer.Character
        if character and character.PrimaryPart then
            local primaryPart = character.PrimaryPart
            local originalPosition = primaryPart.Position
            primaryPart.CFrame = CFrame.new(teleportPosition)
            task.wait(0.2)
            primaryPart.CFrame = CFrame.new(originalPosition)
        end
    end

    local function onpress(input, gameProcessedEvent)
        if gameProcessedEvent then return end

        if input.KeyCode == Enum.KeyCode.Six then
            local targetDeathClone = getmouse()
            if targetDeathClone and (tick() - last >= cooldown) then
                last = tick()
                ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Anima tua ad me pertinet.", "All")
                bring(targetDeathClone)

                task.wait(0.2)
                tele()
                stop()
            end
        end
    end

    UserInputService.InputBegan:Connect(onpress)
end)
end
--]]
local function store()
    local player = game.Players.LocalPlayer
    return player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.CFrame
end
local function tele(cframe)
    local player = game.Players.LocalPlayer
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = cframe
    end
end
M:NewButton("Keybinds", "", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/noahsce5/xkeybinds/main/TriadKeybinds'))()()
end)
M:NewButton("Admin", "", function()
loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
end)
M:NewButton("Respawn", "", function()
	local Event = game:GetService("ReplicatedStorage").Events.Respawn
	Event:FireServer()
end)
--[[
M:NewButton("Wearwolf Ring", "", function()
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")
    local LocalPlayer = Players.LocalPlayer

    local function createRingEffect()
        local ring = Instance.new("Part")
        ring.Name = "PersistentRingEffect"
        ring.Size = Vector3.new(10, 0.1, 10)
        ring.Anchored = true
        ring.CanCollide = false
        ring.Material = Enum.Material.Neon
        ring.Color = Color3.fromRGB(0, 255, 255)
        ring.Shape = Enum.PartType.Cylinder
        ring.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3, 0)

        ring.Parent = LocalPlayer.Character

        return ring
    end

    local ring = createRingEffect()

    local function updateRingPosition()
        while ring and ring.Parent do
            ring.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3, 0)
            wait()
        end
    end
    spawn(updateRingPosition)
end)
--]]
M:NewButton("Custom Commands", "", function()
--loadstring(game:HttpGet('https://raw.githubusercontent.com/noahsce5/TriadWare/main/Custom'))()
end)
M:NewButton("Mortal Respawn", "", function()
	local LocalPlayer = game.Players.LocalPlayer
	local Character = LocalPlayer.Character
	local Humanoid = Character.Humanoid
	local Mouse = LocalPlayer:GetMouse()
	local Respawn = game:GetService("ReplicatedStorage").Events.Respawn
	Respawn:FireServer()
	wait(0.5)
	local Morph = game:GetService("ReplicatedStorage").Events.Morph
	Morph:FireServer("Mortal")
end)
M:NewButton("Anti-Afk", "", function()
    local UserInputService = game:GetService("UserInputService")
    while true do
        UserInputService.InputBegan:Fire()
        wait(50)
    end
end)
local witchAcquired = false
local wolfAcquired = false
local function resetWitch()
    witchAcquired = false
end
local function resetWolf()
    wolfAcquired = false
end
M:NewButton("Auto Get Witch", "", function()
    resetWitch()

    local LocalPlayer = game.Players.LocalPlayer
    local Workspace = game:GetService("Workspace")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Respawn = ReplicatedStorage.Events.Respawn
    local Morph = ReplicatedStorage.Events.Morph

    local function auto()
        local player = Workspace.Live:FindFirstChild(LocalPlayer.Name)
        if player then
            local magic = player:FindFirstChild("Magic")
            if magic and magic:IsA("NumberValue") then
                local max = magic:FindFirstChild("Max")
                if max and max:IsA("NumberValue") and (magic.Value == 500 or magic.Value == 550 or magic.Value == 600 or magic.Value == 650) and (max.Value == 500 or max.Value == 550 or max.Value == 600 or max.Value == 650) then
                    local species = player:FindFirstChild("Species")
                    if species and species.Value == "Witch" then
                        witchAcquired = true
                        return false
                    end
                end
            end

            local mortalWitchValue = player:FindFirstChild("MortalWitch")
            if mortalWitchValue then
                witchAcquired = true
                return false
            end

            local species = player:FindFirstChild("Species")
            if species and species.Value == "Witch" then
                witchAcquired = true
                return false
            end
        end

        local backpack = LocalPlayer:FindFirstChild("Backpack")
        if backpack then
            local woodenStake = backpack:FindFirstChild("Wooden Stake")
            local whiteOakStake = backpack:FindFirstChild("White Oak Stake")
            if woodenStake or whiteOakStake then
                local stake = woodenStake or whiteOakStake
                LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(414, 10, 653))
                task.wait(0.5)
                LocalPlayer.Character.Humanoid:EquipTool(stake)
                task.wait(0.5)
                stake.Parent = Workspace
                stake.Handle.Position = Vector3.new(416, 8, 643)

                return false
            end
        end

        return true
    end

    while not witchAcquired do
        if auto() then
            Respawn:FireServer()
            task.wait(0.5)
            Morph:FireServer("Mortal")
            task.wait()
        end
        task.wait(0.5)
    end
end)
M:NewButton("Auto Get Werewolf", "", function()
    resetWolf()

    local LocalPlayer = game.Players.LocalPlayer
    local Workspace = game:GetService("Workspace")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Respawn = ReplicatedStorage.Events.Respawn
    local Morph = ReplicatedStorage.Events.Morph

    local function auto()
        local player = Workspace.Live:FindFirstChild(LocalPlayer.Name)
        if player then
            local energy = player:FindFirstChild("Energy")
            if energy and energy:IsA("NumberValue") then
                local max = energy:FindFirstChild("Max")
                if max and max:IsA("NumberValue") and (energy.Value == 600 or energy.Value == 650 or max.Value == 500 or max.Value == 550) and (max.Value == 600 or max.Value == 650 or max.Value == 500 or max.Value == 550) then
                    local species = player:FindFirstChild("Species")
                    if species and species.Value == "Werewolf" then
                        wolfAcquired = true
                        return false
                    end
                end
            end
        end

        local backpack = LocalPlayer:FindFirstChild("Backpack")
        if backpack then
            local woodenStake = backpack:FindFirstChild("Wooden Stake")
            local whiteOakStake = backpack:FindFirstChild("White Oak Stake")
            if woodenStake or whiteOakStake then
                local stake = woodenStake or whiteOakStake
                LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(414, 10, 653))
                task.wait(0.5)
                LocalPlayer.Character.Humanoid:EquipTool(stake)
                task.wait(0.5)
                stake.Parent = Workspace
                stake.Handle.Position = Vector3.new(416, 8, 643)

                return false
            end
        end

        return true
    end

    while not wolfAcquired do
        if auto() then
            Respawn:FireServer()
            task.wait(0.5)
            Morph:FireServer("Mortal")
            task.wait()
        end
        task.wait(0.5)
    end
end)
local isFarming = false

M:NewButton("Start Stake Farm", "", function()
    if not isFarming then
        isFarming = true
        local LocalPlayer = game.Players.LocalPlayer
        local Workspace = game:GetService("Workspace")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        local Respawn = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Respawn")
        local Morph = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Morph")

        local function dropStake()
            local backpack = LocalPlayer:FindFirstChild("Backpack")
            if backpack then
                local woodenStake = backpack:FindFirstChild("Wooden Stake")
                local whiteOakStake = backpack:FindFirstChild("White Oak Stake")
                if woodenStake or whiteOakStake then
                    local stake = woodenStake or whiteOakStake
                    LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(414, 10, 653))
                    task.wait(0.5)
                    LocalPlayer.Character.Humanoid:EquipTool(stake)
                    task.wait(0.5)
                    stake.Parent = Workspace
                    stake.Handle.Position = Vector3.new(416, 8, 643)
                    return true
                end
            end
            return false
        end

        spawn(function()
            while isFarming do
                local stakeAcquired = false

                while not stakeAcquired and isFarming do
                    Respawn:FireServer()
                    task.wait(0.5)
                    Morph:FireServer("Mortal")
                    task.wait(0.5)
                    if dropStake() then
                        stakeAcquired = true
                    else
                        task.wait(0.5)
                    end
                end
                task.wait(0.8)
            end
        end)
    end
end)

local function stopFarming()
    isFarming = false
end

M:NewButton("Stop Stake Farm", "", function()
    stopFarming()
end)
M:NewButton("Remove Blur", "", function()
    local function disableBlur()
        local Lighting = game:GetService("Lighting")
        local blur = Lighting:FindFirstChild("Blur")
        if blur then
            blur.Enabled = false
        end
    end
    
    local function checkBlur()
        while true do
            disableBlur()
            task.wait(0.1)
        end
    end

    spawn(checkBlur)
end)
local RunService = game:GetService("RunService")
M:NewButton("Remove Shields", "", function()
    local function disables()
        local Workspace = game:GetService("Workspace")
        RunService.Heartbeat:Connect(function()
            local a = Workspace:FindFirstChild("AntiTp")
            if a then
                local p = a:FindFirstChild("protectionBall")
                if p then
                    p.CanCollide = false
                end
            end
            
            local b = Workspace:FindFirstChild("Bulla")
            if b then
                local s = b:FindFirstChild("Shield")
                if s then
                    s.CanCollide = false
                end
            end
            local f = Workspace:FindFirstChild("FireBoundary")
            if f then
                local m = f:FindFirstChild("MeshPart")
                if m then
                    m.CanCollide = false
                end
            end
        end)
    end
    disables()
end)
M:NewButton("Anti Pain", "", function()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local target = player.Character
    local humanoidRootPart = target.HumanoidRootPart

    while wait(0.1) do
        local pain = target:FindFirstChild("PainInfliction")
        if pain then
            local originalPosition = humanoidRootPart.Position
            local downwardOffset = Vector3.new(-660, 46, 80)
            local targetPosition = humanoidRootPart.Position + downwardOffset

            humanoidRootPart.CFrame = CFrame.new(targetPosition)
            wait(0.1)
            humanoidRootPart.CFrame = CFrame.new(originalPosition)
        end
    end
end)
M:NewLabel("Teleport")
local player = game.Players.LocalPlayer
local function waitForCharacter()
    while not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") do
        wait()
    end
end
player.Chatted:Connect(function(message)
    message = message:lower()
    if message == "rise" then
        teleportToResLocation()
    elseif message == "res" then
        teleportToResLocation()
    elseif message == "cosmix" then
        teleportToCosmicLocation()
    elseif message == "heal!" then
        teleportToHealLocation()
    elseif message == "spawn" then
        teleportToSpawnLocation()
    elseif message == "s" then
        teleportToSLocation()
    elseif message == "den" then
        teleportToDenLocation()
    end
end)

function teleportToResLocation()
    waitForCharacter()
    local pl = player.Character.HumanoidRootPart
    local locations = {
        CFrame.new(-440, 5, -0),
        CFrame.new(-126, 5, 2),
        CFrame.new(-386, 3, -60)
    }
    local randomLocation = locations[math.random(1, #locations)]
    pl.CFrame = randomLocation
end

function teleportToCosmicLocation()
    waitForCharacter()
    local pl = player.Character.HumanoidRootPart
    local location = CFrame.new(-376, -268, -4881)
    pl.CFrame = location
end

function teleportToHealLocation()
    waitForCharacter()
    local pl = player.Character.HumanoidRootPart
    local location = CFrame.new(-385, 3, 1)
    pl.CFrame = location
end

function teleportToSpawnLocation()
    waitForCharacter()
    local pl = player.Character.HumanoidRootPart
    local location = CFrame.new(-502, 5, 261)
    pl.CFrame = location
end

function teleportToSLocation()
    waitForCharacter()
    local pl = player.Character.HumanoidRootPart
    local location = CFrame.new(448, 386, -14822)
    pl.CFrame = location
end

function teleportToDenLocation()
    waitForCharacter()
    local pl = player.Character.HumanoidRootPart
    local location = CFrame.new(432, 7, 651)
    pl.CFrame = location
end
M:NewButton("Cosmix", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(-376, -268, -4881)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait()
	pl.CFrame = location
end)
M:NewButton("Spawn", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(448, 386, -14822)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait()
	pl.CFrame = location
end)
M:NewButton("Astrailis Room", "", function()
   local pos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
   if game:GetService("Workspace"):FindFirstChild("AstralisDoor") then
		game:GetService("Workspace"):FindFirstChild("AstralisDoor"):Destroy()
	end
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-382, 3, -50)
end)
M:NewButton("The Wolf Den", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(432, 7, 651)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait(0.1)
	pl.CFrame = location
end)
M:NewButton("Human Spawn", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(-502, 5, 261)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait(0.1)
	pl.CFrame = location
end)
M:NewButton("Witch Tunnel", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(-225, -26, -69)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait(0.1)
	pl.CFrame = location
end)
M:NewButton("Res Circle 1", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(-122, 5, 6)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait()
	pl.CFrame = location
end)
M:NewButton("Res Circle 2", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(-435, 5, -1)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait()
	pl.CFrame = location
end)
M:NewButton("Res Circle 3", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(166, 5, 389)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait()
	pl.CFrame = location
end)
M:NewButton("Fall Damage", "", function()
	local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
	local location = CFrame.new(-289, 285, 168)
	local humanoid = game.Players.LocalPlayer.Character.Humanoid
	wait()
	pl.CFrame = location
end)
W:NewButton("Witch Immortality", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Workspace = game:GetService("Workspace")
    local LocalPlayer = Players.LocalPlayer

    local animationId = "rbxassetid://9237375399"
    local debounce = false
    local vervainBodyActivated = false

    local function playAnimation(character, animationId)
        local Animation = Instance.new("Animation")
        Animation.AnimationId = animationId

        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animator = humanoid:FindFirstChildOfClass("Animator")
            if not animator then
                animator = Instance.new("Animator")
                animator.Parent = humanoid
            end

            local animationTrack = animator:LoadAnimation(Animation)
            animationTrack:Play()
            animationTrack.Looped = false
            return animationTrack
        end
    end

    local function applyVervainBody()
        if not LocalPlayer.Character:FindFirstChild("VervainBody") and Workspace.Live:FindFirstChild(LocalPlayer.Name) then
            local A_1 = "Magic"
            local A_2 = { [1] = "VervainBody", [2] = LocalPlayer.Character }
            local Event = ReplicatedStorage.Events.Witch
            Event:FireServer(A_1, A_2)
        end
    end

    local function destroyImmortalityComm()
        local immortalityFolder = Workspace.Live:FindFirstChild(LocalPlayer.Name) and Workspace.Live[LocalPlayer.Name]:FindFirstChild("Immortality")
        if immortalityFolder and immortalityFolder:FindFirstChild("Comm") then
            immortalityFolder.Comm:Destroy()
        end
    end

    local function saySpell(spell)
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spell, "All")
    end

    local function give()
        if not debounce then
            debounce = true
            saySpell("Elysium's Grace!")
            local animationTrack = playAnimation(LocalPlayer.Character, animationId)

            if not vervainBodyActivated then
                applyVervainBody()
                destroyImmortalityComm()
                vervainBodyActivated = true
            end

            if animationTrack then
                animationTrack:Stop()
            end

            debounce = false
        end
    end

    local function apply()
        while true do
            if vervainBodyActivated then
                applyVervainBody()
            end
            wait(10)
        end
    end

    give()
    coroutine.wrap(apply)()
end)
W:NewButton("Witch Animation", "", function()
    local character = game.Players.LocalPlayer.Character
    local humanoid = character:WaitForChild("Humanoid")
    local runAnim = Instance.new("Animation")
    runAnim.AnimationId = "rbxassetid://13599944537"
    runAnim.Name = "DemonRun"
    runAnim.Parent = character.Immortality 
    Instance.new("BoolValue", character).Name = "Vampire"
    local walkAnim = character.Immortality.DemonWalk
    local runAnimation = character.Immortality:WaitForChild("DemonRun")
    local walkAnimation = character.Immortality:WaitForChild("DemonWalk")
    local runAnimationTrack = humanoid:LoadAnimation(runAnimation)
    local walkAnimationTrack = humanoid:LoadAnimation(walkAnimation)
    local currentAnimationTrack = nil
    local function inf()
        while true do
            task.wait()
            if character:FindFirstChild("Stamina") then
                character.Stamina.Value = 200
            end
        end
    end

    coroutine.wrap(inf)()
    while true do
        task.wait()
        if character and humanoid then
            if humanoid.ragdoll.Value == false then
                if humanoid.WalkSpeed == 16 then
                    if currentAnimationTrack ~= walkAnimationTrack then
                        character.Animate.Disabled = true
                        if currentAnimationTrack then
                            currentAnimationTrack:Stop()
                        end
                        walkAnimationTrack:Play()
                        currentAnimationTrack = walkAnimationTrack
                    end
                elseif humanoid.WalkSpeed > 45 then
                    if humanoid.MoveDirection.Magnitude > 0 then
                        if currentAnimationTrack ~= runAnimationTrack then
                            character.Animate.Disabled = true
                            if currentAnimationTrack then
                                currentAnimationTrack:Stop()
                            end
                            runAnimationTrack:Play()
                            currentAnimationTrack = runAnimationTrack
                        end
                    end
                end
            else
                character.Animate.Disabled = false
                currentAnimationTrack = nil
            end

            if humanoid.MoveDirection.Magnitude == 0 and currentAnimationTrack == runAnimationTrack then
                currentAnimationTrack:Stop()
                walkAnimationTrack:Play()
                currentAnimationTrack = walkAnimationTrack
            end
            if character:FindFirstChild("PainInfliction") then
                humanoid.HipHeight = 2
            else
                humanoid.HipHeight = 3.1
            end
        end
    end
end)
W:NewButton("See Noah's Custom", "", function()
    local targetPlayerName = "tissnoah"
    local player = game.Players:FindFirstChild(targetPlayerName)
    if not player then
        return
    end

    local character = player.Character or player.CharacterAdded:Wait()

    local face = game.ReplicatedStorage.Characters.Eva.Faces.Face:Clone()
    local bodyColor = game.ReplicatedStorage.Characters.Lya.Clothes["Body Colors"]:Clone()
    local pants = game.ReplicatedStorage.Characters.Lya.Clothes.Pants:Clone()
    local shirt = game.ReplicatedStorage.Characters.Lya.Clothes.Shirt:Clone()

    local head = character:FindFirstChild("Head")
    if head then
        local existingFace = head:FindFirstChild("Face") or head:FindFirstChild("face")
        if existingFace then
            existingFace:Destroy()
        end
        face.Parent = head
    else
        return
    end

    local liveFolder = game.Workspace:FindFirstChild("Live")
    local playerModel = liveFolder and liveFolder:FindFirstChild(player.Name)

    if playerModel then
        local existingBodyColor = playerModel:FindFirstChild("Body Colors")
        if existingBodyColor then
            existingBodyColor:Destroy()
        end
        bodyColor.Parent = playerModel

        local existingPants = playerModel:FindFirstChild("Pants")
        if existingPants then
            existingPants:Destroy()
        end
        pants.Parent = playerModel

        local existingShirt = playerModel:FindFirstChild("Shirt")
        if existingShirt then
            existingShirt:Destroy()
        end
        shirt.Parent = playerModel
    end

    local healthBar = head:FindFirstChild("healthBar")
    if healthBar then
        local frame = healthBar:FindFirstChild("Frame")
        if frame then
            local healthBarInner = frame:FindFirstChild("HealthBar")
            if healthBarInner then
                local ye = healthBarInner:FindFirstChild("ye")
                if ye then
                    ye.ImageColor3 = Color3.fromRGB(255, 170, 255)
                end
                healthBarInner.ImageColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
    end

    local naming = head:FindFirstChild("Naming")
    if not naming then
        for _, model in ipairs(liveFolder:GetChildren()) do
            if model ~= playerModel then
                local otherNaming = model.Head:FindFirstChild("Naming")
                if otherNaming then
                    naming = otherNaming:Clone()
                    naming.Parent = head
                    break
                end
            end
        end
    end

    if naming then
        naming.TextLabel.Text = "Noah Veraux"
        naming.StudsOffset = Vector3.new(0, 3.5, 0)

        local title = naming:Clone()
        title.Name = "Title"
        local species = playerModel and playerModel:FindFirstChild("Species")
        if species and (species.Value == "Werewolf" or species.Value == "Hybrid") then
            title.TextLabel.Text = "The Alpha"
        elseif species and species.Value == "Heretic" then
            title.TextLabel.Text = "The Abomination"
        elseif species and species.Value == "Mortal" then
            title.TextLabel.Text = "The Endless"
            title.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
        else
            title.TextLabel.Text = "The Ancestor"
        end
        title.StudsOffset = Vector3.new(0, 3, 0)
        title.Parent = head
    end

    local rank = head:FindFirstChild("Rank")
    if rank then
        rank.TextLabel.Text = "Community Director"
        rank.StudsOffset = Vector3.new(0, 4, 0)
    end

    local species = playerModel and playerModel:FindFirstChild("Species")
    if species then
        if species.Value == "Mortal" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Vampire" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Werewolf" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(170, 170, 0)
            end
        elseif species.Value == "Hybrid" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Heretic" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        elseif species.Value == "SiphonerWitch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Witch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        else
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        end

        naming.StudsOffset = Vector3.new(0, 3.5, 0)
        head.Title.StudsOffset = Vector3.new(0, 3, 0)
        if rank then
            rank.StudsOffset = Vector3.new(0, 4, 0)
        end
    end

    local accessories = {
        "14638586583",
        "1365767"
    }

    local loadedAccessories = {}
    for _, accessoryId in ipairs(accessories) do
        local accessory = game:GetObjects("rbxassetid://" .. accessoryId)[1]
        table.insert(loadedAccessories, accessory)
    end

    local function removeAllAccessories()
        local accessoriesToRemove = {}
        for _, a in pairs(character:GetChildren()) do
            if a:IsA("Accessory") or a.Name == "Hair" then
                table.insert(accessoriesToRemove, a)
            end
        end
        for _, a in ipairs(accessoriesToRemove) do
            a:Destroy()
        end
    end

    removeAllAccessories()

    local function weldAttachments(attach1, attach2)
        local weld = Instance.new("Weld")
        weld.Part0 = attach1.Parent
        weld.Part1 = attach2.Parent
        weld.C0 = attach1.CFrame
        weld.C1 = attach2.CFrame
        weld.Parent = attach1.Parent
        return weld
    end

    local function findFirstMatchingAttachment(model, name)
        for _, child in pairs(model:GetChildren()) do
            if child:IsA("Attachment") and child.Name == name then
                return child
            elseif not child:IsA("Accoutrement") and not child:IsA("Tool") then
                local foundAttachment = findFirstMatchingAttachment(child, name)
                if foundAttachment then
                    return foundAttachment
                end
            end
        end
    end

    local function addAccoutrement(character, accoutrement)
        accoutrement.Parent = character
        local handle = accoutrement:FindFirstChild("Handle")
        if handle then
            local accoutrementAttachment = handle:FindFirstChildOfClass("Attachment")
            if accoutrementAttachment then
                local characterAttachment = findFirstMatchingAttachment(character, accoutrementAttachment.Name)
                if characterAttachment then
                    weldAttachments(characterAttachment, accoutrementAttachment)
                end
            end
        end
    end

    for _, accessory in ipairs(loadedAccessories) do
        addAccoutrement(character, accessory)
    end
end)
W:NewButton("Transformation", "", function()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    local face = game.ReplicatedStorage.Characters.Eva.Faces.Face:Clone()
    local bodyColor = game.ReplicatedStorage.Characters.Lya.Clothes["Body Colors"]:Clone()
    local pants = game.ReplicatedStorage.Characters.Lya.Clothes.Pants:Clone()
    local shirt = game.ReplicatedStorage.Characters.Lya.Clothes.Shirt:Clone()

    local head = character:FindFirstChild("Head")
    if head then
        local existingFace = head:FindFirstChild("Face") or head:FindFirstChild("face")
        if existingFace then
            existingFace:Destroy()
        end
        face.Parent = head
    else
        return
    end

    local Live = game.Workspace:FindFirstChild("Live")
    local localm = Live and Live:FindFirstChild(player.Name)

    if localm then
        local existingBodyColor = localm:FindFirstChild("Body Colors")
        if existingBodyColor then
            existingBodyColor:Destroy()
        end
        bodyColor.Parent = localm

        local existingPants = localm:FindFirstChild("Pants")
        if existingPants then
            existingPants:Destroy()
        end
        pants.Parent = localm

        local existingShirt = localm:FindFirstChild("Shirt")
        if existingShirt then
            existingShirt:Destroy()
        end
        shirt.Parent = localm
    end

    local healthBar = head:FindFirstChild("healthbar")
    if healthBar then
        local frame = healthBar:FindFirstChild("Frame")
        if frame then
            local healthbarInner = frame:FindFirstChild("HealthBar")
            if healthbarInner then
                local ye = healthbarInner:FindFirstChild("ye")
                if ye then
                    ye.ImageColor3 = Color3.fromRGB(255, 170, 255)
                end
                healthbarInner.ImageColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
    end

    local naming = head:FindFirstChild("Naming")
    if not naming then
        for _, model in ipairs(Live:GetChildren()) do
            if model ~= localm then
                local otherNaming = model.Head:FindFirstChild("Naming")
                if otherNaming then
                    naming = otherNaming:Clone()
                    naming.Parent = head
                    break
                end
            end
        end
    end

    if naming then
        naming.TextLabel.Text = "Dominique Serveaux"
        naming.StudsOffset = Vector3.new(0, 3.5, 0)

        local title = naming:Clone()
        title.Name = "Title"
        local species = localm and localm:FindFirstChild("Species")
        if species and (species.Value == "Werewolf" or species.Value == "Hybrid") then
            title.TextLabel.Text = "The Alpha"
        elseif species and species.Value == "Heretic" then
            title.TextLabel.Text = "The Abomination"
        elseif species and species.Value == "Mortal" then
            title.TextLabel.Text = "The Endless"
        else
            title.TextLabel.Text = "The Ancestor"
        end
        title.StudsOffset = Vector3.new(0, 3, 0)
        title.Parent = head
    end

    local rank = head:FindFirstChild("Rank")
    if rank then
        rank.TextLabel.Text = "Community Director"
        rank.StudsOffset = Vector3.new(0, 4, 0)

        local salem = rank:Clone()
        salem.Name = "Salem"
        salem.TextLabel.Text = "Coven of Serveaux"
        salem.TextLabel.TextColor3 = Color3.new(0, 0, 0)
        salem.Size = UDim2.new(10, 0, 0.300000012, 0)
        salem.StudsOffset = Vector3.new(0, 4.5, 0)
        salem.Parent = head
    end

    local species = localm and localm:FindFirstChild("Species")
    if species then
        if species.Value == "Mortal" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Vampire" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Werewolf" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(170, 170, 0)
            end
        elseif species.Value == "Hybrid" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Heretic" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        elseif species.Value == "SiphonerWitch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Witch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        else
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        end

        naming.StudsOffset = Vector3.new(0, 3.5, 0)
        head.Title.StudsOffset = Vector3.new(0, 3, 0)
        if rank then
            rank.StudsOffset = Vector3.new(0, 4, 0)
        end
    end

    local accessories = {
        "14638586583",
        "1365767"
    }

    local loadedAccessories = {}
    for _, accessoryId in ipairs(accessories) do
        local accessory = game:GetObjects("rbxassetid://" .. accessoryId)[1]
        table.insert(loadedAccessories, accessory)
    end

    local function removeAllAccessories()
        local accessoriesToRemove = {}
        for _, a in pairs(character:GetChildren()) do
            if a:IsA("Accessory") or a.Name == "Hair" then
                table.insert(accessoriesToRemove, a)
            end
        end
        for _, a in ipairs(accessoriesToRemove) do
            a:Destroy()
        end
    end

    removeAllAccessories()

    local function weldAttachments(attach1, attach2)
        local weld = Instance.new("Weld")
        weld.Part0 = attach1.Parent
        weld.Part1 = attach2.Parent
        weld.C0 = attach1.CFrame
        weld.C1 = attach2.CFrame
        weld.Parent = attach1.Parent
        return weld
    end

    local function findFirstMatchingAttachment(model, name)
        for _, child in pairs(model:GetChildren()) do
            if child:IsA("Attachment") and child.Name == name then
                return child
            elseif not child:IsA("Accoutrement") and not child:IsA("Tool") then
                local found = findFirstMatchingAttachment(child, name)
                if found then
                    return found
                end
            end
        end
    end

    local function addAccoutrement(character, accoutrement)
        accoutrement.Parent = character
        local handle = accoutrement:FindFirstChild("Handle")
        if handle then
            local accAttachment = handle:FindFirstChildOfClass("Attachment")
            if accAttachment then
                local charAttachment = findFirstMatchingAttachment(character, accAttachment.Name)
                if charAttachment then
                    weldAttachments(charAttachment, accAttachment)
                end
            end
        end
    end

    for _, accessory in ipairs(loadedAccessories) do
        addAccoutrement(character, accessory)
    end
end)
--[[
W:NewButton("Transformation", "", function()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    local face = game.ReplicatedStorage.Characters.Eva.Faces.Face:Clone()
    local bodyColor = game.ReplicatedStorage.Characters.Lya.Clothes["Body Colors"]:Clone()
    local pants = game.ReplicatedStorage.Characters.Lya.Clothes.Pants:Clone()
    local shirt = game.ReplicatedStorage.Characters.Lya.Clothes.Shirt:Clone()

    local head = character:FindFirstChild("Head")
    if head then
        local existingFace = head:FindFirstChild("Face") or head:FindFirstChild("face")
        if existingFace then
            existingFace:Destroy()
        end
        face.Parent = head
    else
        return
    end

    local liveFolder = game.Workspace:FindFirstChild("Live")
    local localPlayerModel = liveFolder and liveFolder:FindFirstChild(player.Name)

    if localPlayerModel then
        local existingBodyColor = localPlayerModel:FindFirstChild("Body Colors")
        if existingBodyColor then
            existingBodyColor:Destroy()
        end
        bodyColor.Parent = localPlayerModel

        local existingPants = localPlayerModel:FindFirstChild("Pants")
        if existingPants then
            existingPants:Destroy()
        end
        pants.Parent = localPlayerModel

        local existingShirt = localPlayerModel:FindFirstChild("Shirt")
        if existingShirt then
            existingShirt:Destroy()
        end
        shirt.Parent = localPlayerModel
    end

    local healthBar = head:FindFirstChild("healthBar")
    if healthBar then
        local frame = healthBar:FindFirstChild("Frame")
        if frame then
            local healthBarInner = frame:FindFirstChild("HealthBar")
            if healthBarInner then
                local ye = healthBarInner:FindFirstChild("ye")
                if ye then
                    ye.ImageColor3 = Color3.fromRGB(255, 170, 255)
                end
                healthBarInner.ImageColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
    end

    local naming = head:FindFirstChild("Naming")
    if not naming then
        for _, model in ipairs(liveFolder:GetChildren()) do
            if model ~= localPlayerModel then
                local otherNaming = model.Head:FindFirstChild("Naming")
                if otherNaming then
                    naming = otherNaming:Clone()
                    naming.Parent = head
                    break
                end
            end
        end
    end

    if naming then
        naming.TextLabel.Text = "Noah Veraux"
        naming.StudsOffset = Vector3.new(0, 3.5, 0)

        local title = naming:Clone()
        title.Name = "Title"
        local species = localPlayerModel and localPlayerModel:FindFirstChild("Species")
        if species and (species.Value == "Werewolf" or species.Value == "Hybrid") then
            title.TextLabel.Text = "The Alpha"
        elseif species and species.Value == "Heretic" then
            title.TextLabel.Text = "The Abomination"
        elseif species and species.Value == "Mortal" then
            title.TextLabel.Text = "The Endless"
        else
            title.TextLabel.Text = "The Ancestor"
        end
        title.StudsOffset = Vector3.new(0, 3, 0)
        title.Parent = head
    end

    local rank = head:FindFirstChild("Rank")
    if rank then
        rank.TextLabel.Text = "Community Director"
        rank.StudsOffset = Vector3.new(0, 4, 0)
    end

    local species = localPlayerModel and localPlayerModel:FindFirstChild("Species")
    if species then
        if species.Value == "Mortal" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Vampire" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Werewolf" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(170, 170, 0)
            end
        elseif species.Value == "Hybrid" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Heretic" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        elseif species.Value == "SiphonerWitch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Witch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        else
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        end

        naming.StudsOffset = Vector3.new(0, 3.5, 0)
        head.Title.StudsOffset = Vector3.new(0, 3, 0)
        if rank then
            rank.StudsOffset = Vector3.new(0, 4, 0)
        end
    end

    local accessories = {
        "14638586583",
        "1365767"
    }

    local loadedAccessories = {}
    for _, accessoryId in ipairs(accessories) do
        local accessory = game:GetObjects("rbxassetid://" .. accessoryId)[1]
        table.insert(loadedAccessories, accessory)
    end

    local char = game.Players.LocalPlayer.Character

    local function removeAllAccessories()
        local accessoriesToRemove = {}
        for _, a in pairs(char:GetChildren()) do
            if a:IsA("Accessory") or a.Name == "Hair" then
                table.insert(accessoriesToRemove, a)
            end
        end
        for _, a in ipairs(accessoriesToRemove) do
            a:Destroy()
        end
    end

    removeAllAccessories()

    local function weldAttachments(attach1, attach2)
        local weld = Instance.new("Weld")
        weld.Part0 = attach1.Parent
        weld.Part1 = attach2.Parent
        weld.C0 = attach1.CFrame
        weld.C1 = attach2.CFrame
        weld.Parent = attach1.Parent
        return weld
    end

    local function findFirstMatchingAttachment(model, name)
        for _, child in pairs(model:GetChildren()) do
            if child:IsA("Attachment") and child.Name == name then
                return child
            elseif not child:IsA("Accoutrement") and not child:IsA("Tool") then
                local foundAttachment = findFirstMatchingAttachment(child, name)
                if foundAttachment then
                    return foundAttachment
                end
            end
        end
    end

    local function addAccoutrement(character, accoutrement)
        accoutrement.Parent = character
        local handle = accoutrement:FindFirstChild("Handle")
        if handle then
            local accoutrementAttachment = handle:FindFirstChildOfClass("Attachment")
            if accoutrementAttachment then
                local characterAttachment = findFirstMatchingAttachment(character, accoutrementAttachment.Name)
                if characterAttachment then
                    weldAttachments(characterAttachment, accoutrementAttachment)
                end
            end
        end
    end

    for _, accessory in ipairs(loadedAccessories) do
        addAccoutrement(char, accessory)
    end
end)
W:NewButton("Boy Transformation", "", function()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    local face = game.ReplicatedStorage.Characters.Eva.Faces.Face:Clone()
    local bodyColor = game.ReplicatedStorage.Characters.Lya.Clothes["Body Colors"]:Clone()

    local head = character:FindFirstChild("Head")
    if head then
        local existingFace = head:FindFirstChild("Face") or head:FindFirstChild("face")
        if existingFace then
            existingFace:Destroy()
        end
        face.Parent = head
    else
        return
    end

    local liveFolder = game.Workspace:FindFirstChild("Live")
    local localPlayerModel = liveFolder and liveFolder:FindFirstChild(player.Name)

    if localPlayerModel then
        local existingBodyColor = localPlayerModel:FindFirstChild("Body Colors")
        if existingBodyColor then
            existingBodyColor:Destroy()
        end
        bodyColor.Parent = localPlayerModel

        local pants = character:FindFirstChildOfClass("Pants") or Instance.new("Pants")
        pants.PantsTemplate = "rbxassetid://14275048077"
        pants.Color3 = Color3.new(1, 1, 1)
        pants.Parent = character

        local shirt = character:FindFirstChildOfClass("Shirt") or Instance.new("Shirt")
        shirt.ShirtTemplate = "rbxassetid://11905457186"
        shirt.Color3 = Color3.new(1, 1, 1)
        shirt.Parent = character
    end

    local healthBar = head:FindFirstChild("healthBar")
    if healthBar then
        local frame = healthBar:FindFirstChild("Frame")
        if frame then
            local healthBarInner = frame:FindFirstChild("HealthBar")
            if healthBarInner then
                local ye = healthBarInner:FindFirstChild("ye")
                if ye then
                    ye.ImageColor3 = Color3.fromRGB(255, 170, 255)
                end
                healthBarInner.ImageColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
    end

    local naming = head:FindFirstChild("Naming")
    if not naming then
        for _, model in ipairs(liveFolder:GetChildren()) do
            if model ~= localPlayerModel then
                local otherNaming = model.Head:FindFirstChild("Naming")
                if otherNaming then
                    naming = otherNaming:Clone()
                    naming.Parent = head
                    break
                end
            end
        end
    end

    if naming then
        naming.TextLabel.Text = "Noah Veraux"
        naming.StudsOffset = Vector3.new(0, 3.5, 0)

        local title = naming:Clone()
        title.Name = "Title"
        title.TextLabel.Text = "The Ancestor"
        title.StudsOffset = Vector3.new(0, 3, 0)
        title.Parent = head
    end

    local rank = head:FindFirstChild("Rank")
    if rank then
        rank.TextLabel.Text = "Community Director"
        rank.StudsOffset = Vector3.new(0, 4, 0)
    end

    local species = localPlayerModel and localPlayerModel:FindFirstChild("Species")
    if species then
        if species.Value == "Mortal" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(223, 223, 223)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Vampire" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Werewolf" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(170, 170, 0)
            end
        elseif species.Value == "Hybrid" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Heretic" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        elseif species.Value == "SiphonerWitch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Witch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        else
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        end

        naming.StudsOffset = Vector3.new(0, 3.5, 0)
        head.Title.StudsOffset = Vector3.new(0, 3, 0)
        if rank then
            rank.StudsOffset = Vector3.new(0, 4, 0)
        end
    end

    local accessories = {
        "12911961302",
        "439945661",
        "1402432199"
    }

    local loadedAccessories = {}
    for _, accessoryId in ipairs(accessories) do
        local accessory = game:GetObjects("rbxassetid://" .. accessoryId)[1]
        table.insert(loadedAccessories, accessory)
    end

    local function removeAllAccessories()
        local accessoriesToRemove = {}
        for _, a in pairs(character:GetChildren()) do
            if a:IsA("Accessory") or a.Name == "Hair" then
                table.insert(accessoriesToRemove, a)
            end
        end
        for _, a in ipairs(accessoriesToRemove) do
            a:Destroy()
        end
    end

    removeAllAccessories()

    local function weldAttachments(attach1, attach2)
        local weld = Instance.new("Weld")
        weld.Part0 = attach1.Parent
        weld.Part1 = attach2.Parent
        weld.C0 = attach1.CFrame
        weld.C1 = attach2.CFrame
        weld.Parent = attach1.Parent
        return weld
    end

    local function findFirstMatchingAttachment(model, name)
        for _, child in pairs(model:GetChildren()) do
            if child:IsA("Attachment") and child.Name == name then
                return child
            elseif not child:IsA("Accoutrement") and not child:IsA("Tool") then
                local foundAttachment = findFirstMatchingAttachment(child, name)
                if foundAttachment then
                    return foundAttachment
                end
            end
        end
    end

    local function addAccoutrement(character, accoutrement)
        accoutrement.Parent = character
        local handle = accoutrement:FindFirstChild("Handle")
        if handle then
            local accoutrementAttachment = handle:FindFirstChildOfClass("Attachment")
            if accoutrementAttachment then
                local characterAttachment = findFirstMatchingAttachment(character, accoutrementAttachment.Name)
                if characterAttachment then
                    weldAttachments(characterAttachment, accoutrementAttachment)
                end
            end
        end
    end

    for _, accessory in ipairs(loadedAccessories) do
        addAccoutrement(character, accessory)
    end
end)
--]]
--[[
W:NewButton("Josiah Transformation", "", function()
    local targetUsername = "X12mix"
    local targetPlayer = game.Players:FindFirstChild(targetUsername)
    if not targetPlayer then
        return
    end

    local accessories = {
        "11716371538",
        "14944913893",
        "15589805212",
        "13156026071"
    }

    local loadedAccessories = {}
    for _, accessoryId in ipairs(accessories) do
        local accessory = game:GetObjects("rbxassetid://" .. accessoryId)[1]
        table.insert(loadedAccessories, accessory)
    end

    local char = targetPlayer.Character
    local name = "The Perverse"
    local r = "Co-Owner"
    local c = "Madison Veraux"

    local function removeAllAccessories()
        local accessoriesToRemove = {}
        for _, a in pairs(char:GetChildren()) do
            if a:IsA("Accessory") or a.Name == "Hair" then
                table.insert(accessoriesToRemove, a)
            end
        end
        for _, a in ipairs(accessoriesToRemove) do
            a:Destroy()
        end
    end

    removeAllAccessories()

    for _, a in pairs(char:GetDescendants()) do
        if a:IsA("BodyColors") then
            a:Destroy()
        elseif a:IsA("Pants") or a:IsA("Shirt") then
            a:Destroy()
        elseif a:IsA("Decal") and (a.Name == "Face" or a.Name == "face") then
            a:Destroy()
        elseif a.Name == "Naming" then
            if a:FindFirstChild("TextLabel") then
                a.TextLabel.Text = name
                a.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        elseif a.Name == "Rank" then
            if a:FindFirstChild("TextLabel") then
                a.TextLabel.Text = r
                a.TextLabel.Position = UDim2.new(0, 0, 0, -23)

                local customRank = a:Clone()
                customRank.Name = "Custom"
                local customTextLabel = customRank:FindFirstChild("TextLabel")
                if customTextLabel then
                    customTextLabel.Text = c
                    customTextLabel.Position = UDim2.new(0, 0, 0, 6)
                end
                customRank.Parent = a.Parent
            end
        end
    end

    local pants = char:FindFirstChildOfClass("Pants") or Instance.new("Pants")
    pants.PantsTemplate = "http://www.roblox.com/asset/?id=10753072723"
    pants.Color3 = Color3.new(1, 1, 1)
    pants.Parent = char

    local shirt = char:FindFirstChildOfClass("Shirt") or Instance.new("Shirt")
    shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=6422264384"
    shirt.Color3 = Color3.new(1, 1, 1)
    shirt.Parent = char

    local faceClone = char.Head:FindFirstChild("Face") or game.ReplicatedStorage.Characters.Qetsiyah.Faces.Face:Clone()
    faceClone.Parent = char.Head

    local head = char:FindFirstChild("Head")
    if head then
        local rank = head:FindFirstChild("Rank")
        if rank then
            local rt = rank:FindFirstChild("TextLabel")
            if rt then
                rt.Text = r
                rt.Position = UDim2.new(0, 0, 0, -23)

                local customRank = rank:Clone()
                customRank.Name = "Custom"
                local customTextLabel = customRank:FindFirstChild("TextLabel")
                if customTextLabel then
                    customTextLabel.Text = c
                    customTextLabel.Position = UDim2.new(0, 0, 0, 6)
                end
                customRank.Parent = head
            end
        end
    end

    local function weldAttachments(attach1, attach2)
        local weld = Instance.new("Weld")
        weld.Part0 = attach1.Parent
        weld.Part1 = attach2.Parent
        weld.C0 = attach1.CFrame
        weld.C1 = attach2.CFrame
        weld.Parent = attach1.Parent
        return weld
    end

    local function buildWeld(weldName, parent, part0, part1, c0, c1)
        local weld = Instance.new("Weld")
        weld.Name = weldName
        weld.Part0 = part0
        weld.Part1 = part1
        weld.C0 = c0
        weld.C1 = c1
        weld.Parent = parent
        return weld
    end

    local function findFirstMatchingAttachment(model, name)
        for _, child in pairs(model:GetChildren()) do
            if child:IsA("Attachment") and child.Name == name then
                return child
            elseif not child:IsA("Accoutrement") and not child:IsA("Tool") then 
                local foundAttachment = findFirstMatchingAttachment(child, name)
                if foundAttachment then
                    return foundAttachment
                end
            end
        end
    end

    local function addAccoutrement(character, accoutrement)  
        accoutrement.Parent = character
        local handle = accoutrement:FindFirstChild("Handle")
        if handle then
            local accoutrementAttachment = handle:FindFirstChildOfClass("Attachment")
            if accoutrementAttachment then
                local characterAttachment = findFirstMatchingAttachment(character, accoutrementAttachment.Name)
                if characterAttachment then
                    weldAttachments(characterAttachment, accoutrementAttachment)
                end
            else
                local head = character:FindFirstChild("Head")
                if head then
                    local attachmentCFrame = CFrame.new(0, 0.5, 0)
                    local hatCFrame = accoutrement.AttachmentPoint
                    buildWeld("HeadWeld", head, head, handle, attachmentCFrame, hatCFrame)
                end
            end
        end
    end

    for _, accessory in ipairs(loadedAccessories) do
        addAccoutrement(char, accessory)
        accessory.Handle.CanCollide = false
    end

    task.spawn(function()
        while char.Parent and task.wait() do
            local rightHand = char:FindFirstChild("RightHand")
            if rightHand then
                local rightHandTransparency = rightHand.Transparency
                faceClone.Transparency = rightHandTransparency
                for _, accessory in ipairs(loadedAccessories) do
                    accessory.Handle.Transparency = rightHandTransparency
                end
            end
        end
    end)

    local function maddy()
        local localPlayer = game.Workspace.Live.oumfx
        local characterNameValue = localPlayer:WaitForChild("CharacterName")

        if characterNameValue and characterNameValue:IsA("StringValue") then
            local characterName = characterNameValue.Value

            local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
            local leaderboard = playerGui:WaitForChild("Leaderboard")
            local scrollingFrame = leaderboard:WaitForChild("ScrollingFrame")

            local textLabel = scrollingFrame:FindFirstChild(characterName)

            if textLabel and textLabel:IsA("TextLabel") then
                textLabel.Text = "Maddy"
                textLabel.TextColor3 = Color3.fromRGB(255, 0, 0) 
            end
        end
    end

    maddy()
end)
W:NewButton("Noah Transformation", "", function()
    local playerName = "XWarescriptss"

    local player = game.Players:FindFirstChild(playerName)
    if not player then
        return
    end

    local character = player.Character or player.CharacterAdded:Wait()

    local face = game.ReplicatedStorage.Characters.Eva.Faces.Face:Clone()
    local bodyColor = game.ReplicatedStorage.Characters.Lya.Clothes["Body Colors"]:Clone()
    local pants = game.ReplicatedStorage.Characters.Lya.Clothes.Pants:Clone()
    local shirt = game.ReplicatedStorage.Characters.Lya.Clothes.Shirt:Clone()

    local head = character:FindFirstChild("Head")
    if head then
        local existingFace = head:FindFirstChild("Face") or head:FindFirstChild("face")
        if existingFace then
            existingFace:Destroy()
        end
        face.Parent = head
    else
        return
    end

    local liveFolder = game.Workspace:FindFirstChild("Live")
    local localPlayerModel = liveFolder and liveFolder:FindFirstChild(playerName)

    if localPlayerModel then
        local existingBodyColor = localPlayerModel:FindFirstChild("Body Colors")
        if existingBodyColor then
            existingBodyColor:Destroy()
        end
        bodyColor.Parent = localPlayerModel

        local existingPants = localPlayerModel:FindFirstChild("Pants")
        if existingPants then
            existingPants:Destroy()
        end
        pants.Parent = localPlayerModel

        local existingShirt = localPlayerModel:FindFirstChild("Shirt")
        if existingShirt then
            existingShirt:Destroy()
        end
        shirt.Parent = localPlayerModel
    end

    local healthBar = head:FindFirstChild("healthBar")
    if healthBar then
        local frame = healthBar:FindFirstChild("Frame")
        if frame then
            local healthBarInner = frame:FindFirstChild("HealthBar")
            if healthBarInner then
                local ye = healthBarInner:FindFirstChild("ye")
                if ye then
                    ye.ImageColor3 = Color3.fromRGB(255, 170, 255)
                end
                healthBarInner.ImageColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
    end

    local naming = head:FindFirstChild("Naming")
    if naming then
        naming.TextLabel.Text = "Noah Veraux"
        naming.StudsOffset = Vector3.new(0, 3.5, 0)

        local title = naming:Clone()
        title.Name = "Title"
        title.TextLabel.Text = "The Ancestor"
        title.StudsOffset = Vector3.new(0, 3, 0)
        title.Parent = head
    end

    local rank = head:FindFirstChild("Rank")
    if rank then
        rank.TextLabel.Text = "Community Director"
        rank.StudsOffset = Vector3.new(0, 4, 0)
    end

    local species = localPlayerModel and localPlayerModel:FindFirstChild("Species")
    if species then
        local titleColor = Color3.fromRGB(255, 255, 0)
        local rankColor = Color3.fromRGB(255, 170, 255)
        local namingColor = Color3.fromRGB(255, 170, 255)

        if species.Value == "Vampire" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Werewolf" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(163, 81, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(170, 170, 0)
            end
        elseif species.Value == "Hybrid" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 127)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Heretic" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        elseif species.Value == "SiphonerWitch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 255, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 170, 255)
            end
        elseif species.Value == "Witch" then
            naming.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(170, 85, 255)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        else
            naming.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            if rank then
                rank.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
            if head:FindFirstChild("Title") then
                head.Title.TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
            end
        end

        naming.StudsOffset = Vector3.new(0, 3.5, 0)
        head.Title.StudsOffset = Vector3.new(0, 3, 0)
        if rank then
            rank.StudsOffset = Vector3.new(0, 4, 0)
        end
    end

    local accessories = {
        "14638586583",
        "1365767"
    }

    local loadedAccessories = {}
    for _, accessoryId in ipairs(accessories) do
        local accessory = game:GetObjects("rbxassetid://" .. accessoryId)[1]
        table.insert(loadedAccessories, accessory)
    end

    local char = character

    local function removeAllAccessories()
        local accessoriesToRemove = {}
        for _, a in pairs(char:GetChildren()) do
            if a:IsA("Accessory") or a.Name == "Hair" then
                table.insert(accessoriesToRemove, a)
            end
        end
        for _, a in ipairs(accessoriesToRemove) do
            a:Destroy()
        end
    end

    removeAllAccessories()

    local function weldAttachments(attach1, attach2)
        local weld = Instance.new("Weld")
        weld.Part0 = attach1.Parent
        weld.Part1 = attach2.Parent
        weld.C0 = attach1.CFrame
        weld.C1 = attach2.CFrame
        weld.Parent = attach1.Parent
        return weld
    end

    local function findFirstMatchingAttachment(model, name)
        for _, child in pairs(model:GetChildren()) do
            if child:IsA("Attachment") and child.Name == name then
                return child
            elseif not child:IsA("Accoutrement") and not child:IsA("Tool") then
                local foundAttachment = findFirstMatchingAttachment(child, name)
                if foundAttachment then
                    return foundAttachment
                end
            end
        end
    end

    local function addAccoutrement(character, accoutrement)
        accoutrement.Parent = character
        local handle = accoutrement:FindFirstChild("Handle")
        if handle then
            local accoutrementAttachment = handle:FindFirstChildOfClass("Attachment")
            if accoutrementAttachment then
                local characterAttachment = findFirstMatchingAttachment(character, accoutrementAttachment.Name)
                if characterAttachment then
                    weldAttachments(characterAttachment, accoutrementAttachment)
                end
            else
                local head = character:FindFirstChild("Head")
                if head then
                    weldAttachments(head, handle)
                end
            end
        end
    end

    for _, accessory in pairs(loadedAccessories) do
        addAccoutrement(character, accessory)
    end
end)
W:NewButton("Hair Transformation", "", function()
    local accessories = {
        "14638586583",
        "1365767"
    }

    local loadedAccessories = {}
    for _, accessoryId in ipairs(accessories) do
        local accessory = game:GetObjects("rbxassetid://" .. accessoryId)[1]
        table.insert(loadedAccessories, accessory)
    end

    local char = game.Players.LocalPlayer.Character

    local function removeAllAccessories()
        local accessoriesToRemove = {}
        for _, a in pairs(char:GetChildren()) do
            if a:IsA("Accessory") or a.Name == "Hair" then
                table.insert(accessoriesToRemove, a)
            end
        end
        for _, a in ipairs(accessoriesToRemove) do
            a:Destroy()
        end
    end

    removeAllAccessories()

    local function weldAttachments(attach1, attach2)
        local weld = Instance.new("Weld")
        weld.Part0 = attach1.Parent
        weld.Part1 = attach2.Parent
        weld.C0 = attach1.CFrame
        weld.C1 = attach2.CFrame
        weld.Parent = attach1.Parent
        return weld
    end

    local function findFirstMatchingAttachment(model, name)
        for _, child in pairs(model:GetChildren()) do
            if child:IsA("Attachment") and child.Name == name then
                return child
            elseif not child:IsA("Accoutrement") and not child:IsA("Tool") then
                local foundAttachment = findFirstMatchingAttachment(child, name)
                if foundAttachment then
                    return foundAttachment
                end
            end
        end
    end

    local function addAccoutrement(character, accoutrement)
        accoutrement.Parent = character
        local handle = accoutrement:FindFirstChild("Handle")
        if handle then
            local accoutrementAttachment = handle:FindFirstChildOfClass("Attachment")
            if accoutrementAttachment then
                local characterAttachment = findFirstMatchingAttachment(character, accoutrementAttachment.Name)
                if characterAttachment then
                    weldAttachments(characterAttachment, accoutrementAttachment)
                end
            else
                local head = character:FindFirstChild("Head")
                if head then
                    local attachmentCFrame = CFrame.new(0, 0.5, 0)
                    local hatCFrame = accoutrement.AttachmentPoint
                    local weld = Instance.new("Weld")
                    weld.Name = "HeadWeld"
                    weld.Part0 = head
                    weld.Part1 = handle
                    weld.C0 = attachmentCFrame
                    weld.C1 = hatCFrame
                    weld.Parent = head
                end
            end
        end
    end

    for _, accessory in ipairs(loadedAccessories) do
        addAccoutrement(char, accessory)
        accessory.Handle.CanCollide = false
    end
end)
W:NewButton("Mesh Transformation", "", function()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    local face = game.ReplicatedStorage.Characters.Ana.Faces.Face:Clone()
    local bodyColor = game.ReplicatedStorage.Characters.Lya.Clothes["Body Colors"]:Clone()
    local pants = game.ReplicatedStorage.Characters.Ana.Clothes.Pants:Clone()
    local shirt = game.ReplicatedStorage.Characters.Ana.Clothes.Shirt:Clone()

local head = character:FindFirstChild("Head")
if head then
    local existingFace = head:FindFirstChild("Face") or head:FindFirstChild("face")
    if existingFace then
        existingFace:Destroy()
    end
    face.Parent = head
else
    return
end


    local liveFolder = game.Workspace.Live
    local localPlayerModel = liveFolder:FindFirstChild(player.Name)

    if not localPlayerModel then
        return
    end

    local existingBodyColor = localPlayerModel:FindFirstChild("Body Colors")
    if existingBodyColor then
        existingBodyColor:Destroy()
    end
    bodyColor.Parent = localPlayerModel

    local existingPants = localPlayerModel:FindFirstChild("Pants")
    if existingPants then
        existingPants:Destroy()
    end
    pants.Parent = localPlayerModel

    local existingShirt = localPlayerModel:FindFirstChild("Shirt")
    if existingShirt then
        existingShirt:Destroy()
    end
    shirt.Parent = localPlayerModel

    local healthBar = head:FindFirstChild("healthBar")
    if healthBar then
        local frame = healthBar:FindFirstChild("Frame")
        if frame then
            local healthBarInner = frame:FindFirstChild("HealthBar")
            if healthBarInner then
                local ye = healthBarInner:FindFirstChild("ye")
                if ye then
                    ye.ImageColor3 = Color3.fromRGB(255, 0, 0)
                end
                healthBarInner.ImageColor3 = Color3.fromRGB(255, 0, 0)
            end
        end
    end

    local naming = head:FindFirstChild("Naming")
    if naming then
        local textLabel = naming:FindFirstChild("TextLabel")
        if textLabel then
            textLabel.Text = "The Devil"
            textLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
        end
    end

    local rank = head:FindFirstChild("Rank")
    if rank then
        local customRank = rank:Clone()
        customRank.Name = "Custom"
        local textLabel = customRank:FindFirstChild("TextLabel")
        if textLabel then
            textLabel.Text = "Athena Astralis"
            textLabel.Position = UDim2.new(0, 0, 0, 6)
        end
        customRank.Parent = head

        rank.Name = "Moderator"
        local rt = rank:FindFirstChild("TextLabel")
        if rt then
            rt.Text = "Moderator"
            rt.Position = UDim2.new(0, 0, 0, -23)
        end
    end

    local upperTorso = character:FindFirstChild("UpperTorso")
    if upperTorso then
        local pointLight = Instance.new("PointLight")
        pointLight.Color = Color3.fromRGB(225, 225, 225)
        pointLight.Range = 10
        pointLight.Brightness = 2
        pointLight.Parent = upperTorso

        local function updateLight()
            if upperTorso.Parent == nil then
                pointLight:Destroy()
            else
                pointLight.Parent = upperTorso
            end
        end

        character.AncestryChanged:Connect(updateLight)
        updateLight()
    end

    local username = player.Name
    local playerGui = player:WaitForChild("PlayerGui")
    local leaderboard = playerGui:WaitForChild("Leaderboard")
    local scrollingFrame = leaderboard:WaitForChild("ScrollingFrame")

    local function update()
        local lp = game.Workspace.Live:FindFirstChild(username)
        if lp then
            local c = lp:FindFirstChild("CharacterName")
            if c and c:IsA("StringValue") then
                local cn = c.Value
                local textLabel = scrollingFrame:FindFirstChild(username)

                if textLabel and textLabel:IsA("TextLabel") then
                    textLabel.Text = "Athena"
                    textLabel.TextColor3 = Color3.fromRGB(225, 0, 0)
                end
            end
        end
    end

    update()

    while true do
        update()
        wait(0.1)
    end
end)
--]]
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local whitelistedPlayers = {
    ["BotForMyst1c"] = true,
    ["Xwarescriptss"] = true,
    ["tissnoah"] = true
}
local authorizedUsers = {
    ["BotForMyst1c"] = true,
    ["Xwarescriptss"] = true,
    ["tissnoah"] = true
}
local notificationsQueue = {}
local notificationActive = false

local function sendNotification(notification)
    StarterGui:SetCore("SendNotification", {
        Title = notification.title,
        Text = notification.text
    })
end

local function sendNextNotification()
    if #notificationsQueue > 0 and not notificationActive then
        notificationActive = true
        local notification = table.remove(notificationsQueue, 1)
        sendNotification(notification)
        wait(2.3)
        notificationActive = false
        sendNextNotification()
    end
end

local function queueNotification(title, text)
    table.insert(notificationsQueue, {title = title, text = text})
    if not notificationActive then
        sendNextNotification()
    end
end

local function findPlayerByPartialName(partialName)
    for _, plr in pairs(Players:GetPlayers()) do
        if string.find(plr.Name:lower(), "^" .. partialName:lower()) then
            return plr
        end
    end
    return nil
end

local function addToWhitelist(username)
    local playerFound = findPlayerByPartialName(username)
    if playerFound then
        whitelistedPlayers[playerFound.Name] = true
        queueNotification("Whitelist Update", playerFound.Name .. " has been added to the whitelist.")
    else
        queueNotification("Whitelist Error", "Player not found.")
    end
end

local function removeFromWhitelist(username)
    local playerFound = findPlayerByPartialName(username)
    if playerFound and whitelistedPlayers[playerFound.Name] then
        whitelistedPlayers[playerFound.Name] = nil
        queueNotification("Whitelist Update", playerFound.Name .. " has been removed from the whitelist.")
    else
        queueNotification("Whitelist Error", "Player not found in the whitelist.")
    end
end

local function removeAllFromWhitelist()
    whitelistedPlayers = {}
    queueNotification("Whitelist Update", "All players have been removed from the whitelist.")
end

local function isWhitelisted(player)
    return whitelistedPlayers[player.Name] ~= nil
end

local function isAuthorized(username)
    return authorizedUsers[username] ~= nil
end

local function processChatCommands(message)
    local command, username = string.match(message, "!(%w+)%s*(%w*)")
    if command == "whitelist" and isAuthorized(player.Name) then
        addToWhitelist(username)
    elseif command == "remove" and isAuthorized(player.Name) then
        removeFromWhitelist(username)
    elseif command == "removeall" and isAuthorized(player.Name) then
        removeAllFromWhitelist()
    elseif command == "status" then
        local whitelistedList = {}
        for name in pairs(whitelistedPlayers) do
            table.insert(whitelistedList, name)
        end
        if #whitelistedList > 0 then
            queueNotification("Whitelist Status", "Whitelisted players: " .. table.concat(whitelistedList, ", "))
        else
            queueNotification("Whitelist Status", "No players are currently whitelisted.")
        end
    end
end

player.Chatted:Connect(processChatCommands)
W:NewButton("Protection", "", function()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    local purpleLight = Instance.new("PointLight")
    purpleLight.Color = Color3.fromRGB(85, 0, 255)
    purpleLight.Range = 10
    purpleLight.Brightness = 3
    purpleLight.Parent = character

    local redLight = Instance.new("PointLight")
    redLight.Color = Color3.fromRGB(255, 0, 0)
    redLight.Range = 10
    redLight.Brightness = 3
    redLight.Parent = character

    local Animation = Instance.new("Animation")
    Animation.AnimationId = "rbxassetid://5396696784"

    local function playAnimation()
        local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
        local animationTrack = animator:LoadAnimation(Animation)
        animationTrack:Play()
    end

    local function stopEffects()
        purpleLight:Destroy()
        redLight:Destroy()
    end

    local function attackPlayers()
        local playersSetOnFire = {}
        local endTime = os.time() + 20
        while os.time() < endTime do
            for _, Player in pairs(Players:GetPlayers()) do
                if Player.Character and Player ~= player and not isWhitelisted(Player) then
                    local mag = (Player.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).magnitude
                    if mag < 10 then
                        local Target = Player.Character or Player.CharacterAdded:Wait()
                        local punchArgs = {
                            [1] = "Punch",
                            [2] = { [1] = false, [2] = Target.Humanoid }
                        }
                        ReplicatedStorage.Events.Vampire:FireServer(unpack(punchArgs))

                        if not playersSetOnFire[Player] then
                            playersSetOnFire[Player] = true
                            local fireArgs = {
                                [1] = "Magic",
                                [2] = { [1] = "FireSpell", [2] = Player.Character }
                            }
                            for _ = 1, 3 do
                                ReplicatedStorage.Events.Witch:FireServer(unpack(fireArgs))
                            end
                        end

                        local channelingArgs = {
                            [1] = "Magic",
                            [2] = { [1] = "requestChanneling", [2] = Target }
                        }
                        ReplicatedStorage.Events.Witch:FireServer(unpack(channelingArgs))
                    end
                end
            end
            wait(0.1)
            if os.time() % 5 == 0 then
                playersSetOnFire = {}
            end
        end
        stopEffects()
    end

    playAnimation()
    attackPlayers()
end)
W:NewButton("Auto Protection", "", function()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    local purpleLight = Instance.new("PointLight")
    purpleLight.Color = Color3.fromRGB(85, 0, 255)
    purpleLight.Range = 10
    purpleLight.Brightness = 3
    purpleLight.Parent = character

    local redLight = Instance.new("PointLight")
    redLight.Color = Color3.fromRGB(255, 0, 0)
    redLight.Range = 10
    redLight.Brightness = 3
    redLight.Parent = character

    local Animation = Instance.new("Animation")
    Animation.AnimationId = "rbxassetid://5396696784"

    local function playAnimation()
        local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)
        local animationTrack = animator:LoadAnimation(Animation)
        animationTrack:Play()
    end

    local function stopEffects()
        purpleLight:Destroy()
        redLight:Destroy()
    end

    local function attackPlayers()
        local playersSetOnFire = {}
        local endTime = os.time() + 20
        while os.time() < endTime do
            for _, Player in pairs(Players:GetPlayers()) do
                if Player.Character and Player ~= player and not isWhitelisted(Player) then
                    local mag = (Player.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).magnitude
                    if mag < 10 then
                        local Target = Player.Character or Player.CharacterAdded:Wait()
                        local punchArgs = {
                            [1] = "Punch",
                            [2] = { [1] = false, [2] = Target.Humanoid }
                        }
                        ReplicatedStorage.Events.Vampire:FireServer(unpack(punchArgs))

                        if not playersSetOnFire[Player] then
                            playersSetOnFire[Player] = true
                            local fireArgs = {
                                [1] = "Magic",
                                [2] = { [1] = "FireSpell", [2] = Player.Character }
                            }
                            for _ = 1, 3 do
                                ReplicatedStorage.Events.Witch:FireServer(unpack(fireArgs))
                            end
                        end

                        local channelingArgs = {
                            [1] = "Magic",
                            [2] = { [1] = "requestChanneling", [2] = Target }
                        }
                        ReplicatedStorage.Events.Witch:FireServer(unpack(channelingArgs))
                    end
                end
            end
            wait(0.1)
            if os.time() % 5 == 0 then
                playersSetOnFire = {}
            end
        end
        stopEffects()
    end

    playAnimation()
    attackPlayers()
end)
W:NewButton("Auto Defend", "Protects you against being rip, snapped, and compelled.", function()
    local monitoring = false

    local function attackPlayers()
        for _, target in pairs(Players:GetPlayers()) do
            if target.Character and target ~= player and not isWhitelisted(target) then
                local upperTorso = target.Character:FindFirstChild("UpperTorso")
                local playerUpperTorso = player.Character:FindFirstChild("UpperTorso")
                if upperTorso and playerUpperTorso then
                    local mag = (upperTorso.Position - playerUpperTorso.Position).magnitude
                    if mag < 2 then
                        local punchArgs = {
                            [1] = "Punch",
                            [2] = { [1] = false, [2] = target.Character.Humanoid }
                        }
                        ReplicatedStorage.Events.Vampire:FireServer(unpack(punchArgs))

                        local fireArgs = {
                            [1] = "Magic",
                            [2] = { [1] = "FireSpell", [2] = target.Character }
                        }
                        for _ = 1, 3 do
                            ReplicatedStorage.Events.Witch:FireServer(unpack(fireArgs))
                        end
                    end
                end
            end
        end
    end

    local function monitorProtection()
        if monitoring then return end
        monitoring = true

        local function checkCharacter()
            local characterModel = game.Workspace.Live:FindFirstChild(player.Name)
            if characterModel then
                local heartRipped = characterModel:FindFirstChild("HeartRipped") and characterModel.HeartRipped:IsA("ObjectValue") and characterModel.HeartRipped.Value
                local beingCompelled = characterModel:FindFirstChild("BeingCompelled") and characterModel.BeingCompelled:IsA("BoolValue") and characterModel.BeingCompelled.Value
                local neckSnapped = characterModel:FindFirstChild("NeckSnapped") and characterModel.NeckSnapped:IsA("ObjectValue") and characterModel.NeckSnapped.Value

                if heartRipped or beingCompelled or neckSnapped then
                    attackPlayers()
                end
            end
        end

        RunService.Heartbeat:Connect(checkCharacter)
        player.CharacterAdded:Connect(checkCharacter)
        checkCharacter()
    end

    monitorProtection()
end)
--[[
W:NewButton("See Other Side", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local LocalPlayer = Players.LocalPlayer
    local animationId = "rbxassetid://6082221949"
    local activeAnimationTrack

    local function playAnimation(character, animationId, callback)
        local Animation = Instance.new("Animation")
        Animation.AnimationId = animationId

        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animator = humanoid:FindFirstChildOfClass("Animator") or Instance.new("Animator", humanoid)

            if activeAnimationTrack then
                activeAnimationTrack:Stop()
                activeAnimationTrack = nil
            end

            local animationTrack = animator:LoadAnimation(Animation)
            animationTrack:Play()
            activeAnimationTrack = animationTrack

            animationTrack.Stopped:Connect(function()
                activeAnimationTrack = nil
                if callback then
                    callback()
                end
            end)
        end
    end

    local function updateParticleColor(particleEmitter, color)
        particleEmitter.Color = ColorSequence.new(color)
    end

    local function updatePointLightColor(pointLight, color)
        pointLight.Color = color
    end

    local function clearSiphonAndGlowInRightHand(rightHand)
        for _, child in ipairs(rightHand:GetChildren()) do
            if child:IsA("ParticleEmitter") and child.Name == "PainEffect" then
                child:Destroy()
            elseif child:IsA("PointLight") and child.Name == "PainEffect1" then
                child:Destroy()
            end
        end
    end

    local function updateSiphonAndGlowInRightHand(rightHand)
        local Siphon = ReplicatedStorage.Misc.Siphon:Clone()
        local Glow = ReplicatedStorage.Misc.siphonGlow:Clone()

        Siphon.Name = "PainEffect"
        Glow.Name = "PainEffect1"
        Siphon.Parent = rightHand
        Glow.Parent = rightHand

        updateParticleColor(Siphon, Color3.fromRGB(255, 255, 255))
        updatePointLightColor(Glow, Color3.fromRGB(255, 255, 255))

        Siphon.Enabled = true
        Glow.Enabled = true
    end

    local function disableSiphonAndGlow()
        local playerModel = workspace.Live:FindFirstChild(LocalPlayer.Name)
        if playerModel then
            local rightHand = playerModel:FindFirstChild("RightHand")
            if rightHand then
                for _, child in ipairs(rightHand:GetChildren()) do
                    if child:IsA("ParticleEmitter") and child.Name == "PainEffect" then
                        child.Enabled = false
                    elseif child:IsA("PointLight") and child.Name == "PainEffect1" then
                        child.Enabled = false
                    end
                end
            end
        end
    end

    local function enableOtherSide()
        local playerModel = workspace.Live:FindFirstChild(LocalPlayer.Name)
        if playerModel then
            local otherSide = playerModel:FindFirstChild("OtherSide")
            if otherSide and otherSide:IsA("BoolValue") then
                otherSide.Value = true
            end
        end
    end

    local function onChatMessage(player, message)
        if player == LocalPlayer and message == "Spectra Vision" then
            enableOtherSide()
            disableSiphonAndGlow()
            local playerModel = workspace.Live:FindFirstChild(LocalPlayer.Name)
            if playerModel then
                local rightHand = playerModel:FindFirstChild("RightHand")
                if rightHand then
                    updateSiphonAndGlowInRightHand(rightHand)
                    playAnimation(LocalPlayer.Character, animationId, function()
                    disableSiphonAndGlow()
		    wait(3)
		    clearSiphonAndGlowInRightHand(rightHand)
                    end)
                end
            end
        end
    end

    ReplicatedStorage.DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(data)
        local speaker = data.FromSpeaker
        local message = data.Message
        local player = Players:FindFirstChild(speaker)
        if player and message then
            onChatMessage(player, message)
        end
    end)

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Spectra Vision", "All")
end)
--]]
W:NewButton("See Other Side", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local LocalPlayer = Players.LocalPlayer
    local animationId = "rbxassetid://6082221949"

    local activeAnimationTrack

    local function playAnimation(character, animationId, callback)
        local Animation = Instance.new("Animation")
        Animation.AnimationId = animationId

        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animator = humanoid:FindFirstChildOfClass("Animator")
            if not animator then
                animator = Instance.new("Animator")
                animator.Parent = humanoid
            end

            if activeAnimationTrack then
                activeAnimationTrack:Stop()
                activeAnimationTrack = nil
            end

            local animationTrack = animator:LoadAnimation(Animation)
            animationTrack:Play()
            activeAnimationTrack = animationTrack

            animationTrack.Stopped:Connect(function()
                activeAnimationTrack = nil
                if callback then
                    callback()
                end
            end)
        end
    end

    local function createSeeGhostsFolder()
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local folder = Instance.new("Folder")
        folder.Name = "SeeGhosts"
        folder.Parent = character
    end

    local function onChatMessage(player, message)
        if player == Players.LocalPlayer and message == "Spectra Vision" then
            playAnimation(LocalPlayer.Character, animationId, createSeeGhostsFolder)
        end
    end

    ReplicatedStorage.DefaultChatSystemChatEvents.OnMessageDoneFiltering.OnClientEvent:Connect(function(data)
        local speaker = data.FromSpeaker
        local message = data.Message
        local player = Players:FindFirstChild(speaker)
        if player and message then
            onChatMessage(player, message)
        end
    end)

    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Spectra Vision", "All")
end)
--W:NewButton("UnragdollKeybind(z)", "", function()
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    local bind = "z" -- Declare 'bind' locally
    mouse.KeyDown:Connect(function(key)
        if IsTyping then return end
        if key == bind then
            local args = {
                [1] = 1
            }
            game:GetService("ReplicatedStorage").Events.FallDamage:FireServer(unpack(args))
        end
    end)
--W:NewButton("All Keybinds", "", function()
local bind = 't'
local function getPlayer()
    local userInput = game:GetService("UserInputService")
    local cam = workspace.CurrentCamera
    local mousePos = userInput:GetMouseLocation()
    local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
    players = {}
    for _, x in next, game:GetService('Players'):GetPlayers() do
        players[#players + 1] = x.Character
    end
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
    raycastParams.FilterDescendantsInstances = players
    raycastParams.IgnoreWater = true
    local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
    if raycastResult then
        for _, x in next, game:GetService('Players'):GetPlayers() do
            if not raycastResult.Instance:IsDescendantOf(x.Character) then
                continue 
            end
            return x
        end
    end
    return false
end

local function Set(list)
    local set = {}
    for _, l in ipairs(list) do
        if l then
            set[l] = true
        end
    end
    return set
end

game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
    if IsTyping then return end
    if key == bind then
        local player = getPlayer()
        if player and player ~= game.Players.LocalPlayer then
            local pos = player.Character.HumanoidRootPart.CFrame
            local args = {
                [1] = "Magic",
                [2] = {
                    [1] = "BreakLeg",
                    [2] = player.Character
                }
            }
            
            game:GetService("ReplicatedStorage").Events.Witch:FireServer(unpack(args))																						
        end
    end
end)
        local bind = 'n'
        local function getPlayer()
                local userInput = game:GetService("UserInputService")
                local cam = workspace.CurrentCamera
                local mousePos = userInput:GetMouseLocation()
                local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                players = {}
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    players[#players + 1] = x.Character
                end
                local raycastParams = RaycastParams.new()
                raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                raycastParams.FilterDescendantsInstances = players
                raycastParams.IgnoreWater = true
                local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                if raycastResult then
                    for _, x in next, game:GetService('Players'):GetPlayers() do
                        if not raycastResult.Instance:IsDescendantOf(x.Character) then
                            continue 
                        end
                        return x
                    end
                end
                return false
            end
        
            local function Set(list)
                local set = {}
                for _, l in ipairs(list) do
                    if l then
                        set[l] = true
                    end
                end
                return set
            end
            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                if IsTyping then return end
            if key == bind then
                local player = getPlayer()
                if player then
                local args = {
                   [1] = "Magic",
                   [2] = {
                       [1] = "NoFire",
                       [2] = player.Character
                   }
               }
               
               game:GetService("ReplicatedStorage").Events.Witch:FireServer(unpack(args))                                                                       
                end
            end
        end)
        local bind = 'p'
        local function getPlayer()
                local userInput = game:GetService("UserInputService")
                local cam = workspace.CurrentCamera
                local mousePos = userInput:GetMouseLocation()
                local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
                players = {}
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    players[#players + 1] = x.Character
                end
                local raycastParams = RaycastParams.new()
                raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
                raycastParams.FilterDescendantsInstances = players
                raycastParams.IgnoreWater = true
                local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
                if raycastResult then
                    for _, x in next, game:GetService('Players'):GetPlayers() do
                        if not raycastResult.Instance:IsDescendantOf(x.Character) then
                            continue 
                        end
                        return x
                    end
                end
                return false
            end

            local function Set(list)
                local set = {}
                for _, l in ipairs(list) do
                    if l then
                        set[l] = true
                    end
                end
                return set
            end
            game.Players.LocalPlayer:GetMouse().KeyDown:Connect(function(key)
                if IsTyping then return end
            if key == bind then
                local player = getPlayer()
                local Mouse = game.Players.LocalPlayer:GetMouse()
                local args = {
                    [1] = "Magic",
                    [2] = {
                    [1] = "SnapAll"
                    }
                }
                
                game:GetService("ReplicatedStorage").Events.Witch:FireServer(unpack(args))																					
            end
        end)
V:NewButton("Head Decapitate [Y]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.Y
    local lastTarget
    local inputConnection

    local function isKeybindDown()
        return UserInputService:IsKeyDown(keybind)
    end

    local function Input(input, gameProcessedEvent)
        local localplr = game.Players.LocalPlayer
        local mouse = localplr:GetMouse()
        if isKeybindDown() then
            if mouse.Target and mouse.Target.Parent then
                local plr = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
                if plr and plr ~= lastTarget then
                    lastTarget = plr
                    local user = game.Players[plr.Name].Character
                    local args = {
                        [1] = "Decapitate",
                        [2] = {
                            [1] = user
                        }
                    }
                    game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
                    
                    if inputConnection then
                        inputConnection:Disconnect()
                    end
                end
            end
        end
    end

    inputConnection = UserInputService.InputBegan:Connect(Input)
end)
V:NewButton("Heart Rip [B]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.B
    local lastTarget
    local inputConnection

    local function isKeybindDown()
        return UserInputService:IsKeyDown(keybind)
    end

    local function Input(input, gameProcessedEvent)
        local localplr = game.Players.LocalPlayer
        local mouse = localplr:GetMouse()
        if isKeybindDown() then
            if mouse.Target and mouse.Target.Parent then
                local plr = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
                if plr and plr ~= lastTarget then
                    lastTarget = plr
                    local user = game.Players[plr.Name].Character
                    local args = {
                        [1] = "RipOutHeart",
                        [2] = {
                            [1] = user
                        }
                    }
                    game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
                    
                    if inputConnection then
                        inputConnection:Disconnect()
                    end
                end
            end
        end
    end

    inputConnection = UserInputService.InputBegan:Connect(Input)
end)
V:NewLabel("Vampire Abilities")
V:NewToggle("Kill All", "", function(SPAM)
    _G.HealSpam = SPAM
    while _G.HealSpam == true do
        local Plr = game.Players.LocalPlayer
        for i, Player in pairs (game.Players:GetPlayers()) do

            if Player.Character ~= nil and Player ~= Plr then
                local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                if mag < 999999999 then
                    local Target = Player.Character or Player.CharacterAdded:Wait()
                    local args = {
                        [1] = "Heal",
                        [2] = {
                            [1] = Target
                        }
                    }

                    game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
                end
            end
        end
        wait()
    end
end)
V:NewToggle("Kill All", "", function(SPAM)
    _G.HealSpam = SPAM
    while _G.HealSpam == true do
        local Plr = game.Players.LocalPlayer
        for i, Player in pairs (game.Players:GetPlayers()) do

            if Player.Character ~= nil and Player ~= Plr then
                local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                if mag < 999999999 then
                    local Target = Player.Character or Player.CharacterAdded:Wait()
                    local args = {
                        [1] = "Heal",
                        [2] = {
                            [1] = Target
                        }
                    }

                    game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
                end
            end
        end
        wait()
    end
end)
_G.PUNCH = false
local punchingCoroutine = nil

local function startSpamPunch()
    local Plr = game.Players.LocalPlayer

    if punchingCoroutine then
        _G.PUNCH = false
        task.wait(1)
    end

    punchingCoroutine = coroutine.create(function()
        while _G.PUNCH do
            for _, Player in pairs(game.Players:GetPlayers()) do
                if Player.Character and Player ~= Plr then
                    local upperTorso = Player.Character:FindFirstChild("UpperTorso")
                    local playerUpperTorso = Plr.Character:FindFirstChild("UpperTorso")
                    if upperTorso and playerUpperTorso then
                        local mag = (upperTorso.Position - playerUpperTorso.Position).Magnitude
                        if mag < 10 then
                            local Target = Player.Character:FindFirstChildOfClass("Humanoid")
                            if Target then
                                local args = {
                                    [1] = "Punch",
                                    [2] = {
                                        [1] = false,
                                        [2] = Target
                                    }
                                }
                                game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
                            end
                        end
                    end
                end
            end
            task.wait(0.1)
        end
    end)
    coroutine.resume(punchingCoroutine)
end

local function setupSpamPunch()
    V:NewToggle("Spam Punch All", "", function(PU)
        _G.PUNCH = PU
        if _G.PUNCH then
            if not punchingCoroutine then
                startSpamPunch()
            end
        else
            if punchingCoroutine then
                _G.PUNCH = false
                punchingCoroutine = nil
            end
        end
    end)
end

local function handleChat(message)
    local lowerMessage = message:lower()

    if lowerMessage == ":protection" then
        _G.PUNCH = true
        if not punchingCoroutine then
            startSpamPunch()
        end
    elseif lowerMessage == ":disable" then
        _G.PUNCH = false
        if punchingCoroutine then
            punchingCoroutine = nil
        end
    end
end

local function onPlayerRespawn()
    if _G.PUNCH then
        if not punchingCoroutine then
            startSpamPunch()
        end
    end
end

setupSpamPunch()
game.Players.LocalPlayer.Chatted:Connect(handleChat)
game.Players.LocalPlayer.CharacterAdded:Connect(onPlayerRespawn)
V:NewToggle("Vampire Immortality", "", function(I)
    _G.IMMORTAL = I

    while _G.IMMORTAL == true  do
        local args = {
            [1] = false
        }

        game:GetService("Players").LocalPlayer.Character.BurnInSun.Control:FireServer(unpack(args))
        wait()
    end
end)
V:NewButton("Feed On Yourself", "", function()
   local args = {
      [1] = "Feed",
      [2] = {
          [1] = game:GetService("Players").LocalPlayer.Character
      }
  }
  
  game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
end)
V:NewButton("Compulsion GUI", "", function()
    local UserInputService = game:GetService("UserInputService")
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local keybind = Enum.KeyCode.Q
    local function isKeyBindDown()
        return UserInputService:IsKeyDown(keybind)
    end
    local function onInput(input, gameProcessed)
        if gameProcessed then return end
        local localPlayer = Players.LocalPlayer
        local mouse = localPlayer:GetMouse()
        if isKeyBindDown() and mouse.Target then
            local targetCharacter = mouse.Target.Parent
            local targetPlayer = Players:GetPlayerFromCharacter(targetCharacter)

            if targetPlayer then
                local args = {
                    "Start",
                    { game.Workspace.Live[targetPlayer.Name] }
                }
                ReplicatedStorage.Events.Compulsion:FireServer(unpack(args))
            end
        end
    end
    UserInputService.InputBegan:Connect(onInput)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/noahsce5/TriadWare/main/TriadWare%20Compulsion"))()
end)
V:NewButton("Dont Burn", "", function()
    local Player = game.Players.LocalPlayer
    local Character = Player.Character
    local Humanoid = Character.Humanoid

    local Bite = Character:WaitForChild("Ring")
    Bite.Active.Value = true
end)
V:NewButton("Vampire Bite [T]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.T
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    local function onInput(input, gameProcessedEvent)
        if gameProcessedEvent or input.UserInputType ~= Enum.UserInputType.Keyboard or input.KeyCode ~= keybind then
            return
        end

        local localPlayer = game.Players.LocalPlayer
        local mouse = localPlayer:GetMouse()

        if mouse.Target and mouse.Target.Parent then
            local targetPlayer = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
            if targetPlayer then
                local targetCharacter = targetPlayer.Character
                if targetCharacter then
                    local args = {
                        [1] = "Bite",
                        [2] = { false, targetCharacter }
                    }
                    for i = 1, 5 do
                        ReplicatedStorage.Events.Werewolf:FireServer(unpack(args))
                    end
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onInput)
end)
--[[
V:NewButton("Punch [F]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.F
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    local function onInput(input, gameProcessedEvent)
        if gameProcessedEvent or input.UserInputType ~= Enum.UserInputType.Keyboard or input.KeyCode ~= keybind then
            return
        end

        local localPlayer = game.Players.LocalPlayer
        local mouse = localPlayer:GetMouse()

        if mouse.Target and mouse.Target.Parent then
            local targetPlayer = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
            if targetPlayer and targetPlayer ~= localPlayer then
                local targetCharacter = targetPlayer.Character
                local targetHumanoid = targetCharacter and targetCharacter:FindFirstChildOfClass("Humanoid")

                if targetHumanoid then
                    local args = {
                        [1] = "Punch",
                        [2] = {
                            [1] = false,
                            [2] = targetHumanoid
                        }
                    }
                    ReplicatedStorage.Events.Vampire:FireServer(unpack(args))
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onInput)
end)
--]]
V:NewButton("Vampire Feeding [C]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.C
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    local function onInput(input, gameProcessedEvent)
        if gameProcessedEvent or input.UserInputType ~= Enum.UserInputType.Keyboard or input.KeyCode ~= keybind then
            return
        end

        local localPlayer = game.Players.LocalPlayer
        local mouse = localPlayer:GetMouse()

        if mouse.Target and mouse.Target.Parent then
            local targetPlayer = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
            if targetPlayer then
                local targetCharacter = targetPlayer.Character
                if targetCharacter then
                    local args = {
                        [1] = "Feed",
                        [2] = { targetCharacter }
                    }
                    ReplicatedStorage.Events.Vampire:FireServer(unpack(args))
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onInput)
end)
V:NewButton("Vampire Healing [E]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.E
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    local function onInput(input, gameProcessedEvent)
        if gameProcessedEvent or input.UserInputType ~= Enum.UserInputType.Keyboard or input.KeyCode ~= keybind then
            return
        end

        local localPlayer = game.Players.LocalPlayer
        local mouse = localPlayer:GetMouse()

        if mouse.Target and mouse.Target.Parent then
            local targetPlayer = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
            if targetPlayer then
                local targetCharacter = targetPlayer.Character
                if targetCharacter then
                    local args = {
                        [1] = "Heal",
                        [2] = { targetCharacter }
                    }
                    ReplicatedStorage.Events.Vampire:FireServer(unpack(args))
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onInput)
end)
V:NewLabel("Heretic Abilities")
V:NewButton("Heretic Immorality (Check three dots)", "Only works with turning hertics, not pre-made.", function()
    local player = game.Players.LocalPlayer
    local character = player.Character
    
    if not character then
        warn("Character not found")
        return
    end
    
    task.spawn(function()
        while character.Parent do
            if character:FindFirstChild("Species") and character.Species.Value == "Heretic" then
                local immortality = character:FindFirstChild(string.char(73, 109, 109, 111, 114, 116, 97, 108, 105, 116, 121))
                if immortality then
                    local comm = immortality:FindFirstChild(string.char(67, 111, 109, 109))
                    if comm then
                        comm.Parent = nil
                    end
                end
            end
            task.wait(1)
        end
    end)
end)
V:NewButton("Heretic Siphon", "", function()
    local Player = game.Players.LocalPlayer
    local Character = Player.Character
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Event = ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Witch")
    
    if Event then
        for i = 1, 5 do
            local A_1 = "SelfSiphon"
            Event:FireServer(A_1)
        end
    end
end)
V:NewButton("Remove Slow Siphon", "", function()
    local Players = game:GetService("Players")
    local runService = game:GetService("RunService")
    local isActive = true

    local function deleteSiphoning()
        while isActive do
            local liveFolder = game:GetService("Workspace").Live
            
            local playerFolder = liveFolder:FindFirstChild(Players.LocalPlayer.Name)
            if playerFolder then
                local siphoningObject = playerFolder:FindFirstChild("Siphoning")
                if siphoningObject then
                    siphoningObject:Destroy()
                end
            end
            
            runService.Heartbeat:Wait()
        end
    end

    local function monitorProtection()
        while true do
            local liveFolder = game:GetService("Workspace").Live
            
            local playerFolder = liveFolder:FindFirstChild(Players.LocalPlayer.Name)
            if playerFolder then
                local siphoningObject = playerFolder:FindFirstChild("Siphoning")
                if siphoningObject then
                    deleteSiphoning()
                    break
                end
            end
            
            runService.Heartbeat:Wait()
        end
    end

    monitorProtection()
end)
V:NewButton("Size Flux", "", function()
    local LiveFolder = workspace:FindFirstChild("Live")

    local function updateParticleSize(particleEmitter)
        if particleEmitter:IsA("ParticleEmitter") then
            local sizeSequence = NumberSequence.new({
                NumberSequenceKeypoint.new(0, 0.1),
                NumberSequenceKeypoint.new(0.1, 0.15),
                NumberSequenceKeypoint.new(0.2, 0.12),
                NumberSequenceKeypoint.new(0.3, 0.14),
                NumberSequenceKeypoint.new(0.4, 0.13),
                NumberSequenceKeypoint.new(0.5, 0.12),
                NumberSequenceKeypoint.new(0.6, 0.1),
                NumberSequenceKeypoint.new(0.7, 0.13),
                NumberSequenceKeypoint.new(0.75, 0.11),
                NumberSequenceKeypoint.new(0.8, 0.14),
                NumberSequenceKeypoint.new(0.85, 0.1),
                NumberSequenceKeypoint.new(0.9, 0.12),
                NumberSequenceKeypoint.new(0.925, 0.1),
                NumberSequenceKeypoint.new(0.95, 0.13),
                NumberSequenceKeypoint.new(0.975, 0.11),
                NumberSequenceKeypoint.new(1, 0.1)
            })
            particleEmitter.Size = sizeSequence
        end
    end

    local function continuouslyUpdateHeadSiphon(head)
        local function monitorHeadSiphon()
            for _, child in ipairs(head:GetChildren()) do
                if child:IsA("ParticleEmitter") and child.Name == "HeadSiphon" then
                    updateParticleSize(child)
                end
            end
        end

        monitorHeadSiphon()

        head.ChildAdded:Connect(function(newChild)
            if newChild:IsA("ParticleEmitter") and newChild.Name == "HeadSiphon" then
                updateParticleSize(newChild)
            end
            monitorHeadSiphon()
        end)

        head.ChildRemoved:Connect(function()
            monitorHeadSiphon()
        end)

        while true do
            wait(1)
            monitorHeadSiphon()
        end
    end

    local function monitorPlayerModel(playerModel)
        local head = playerModel:FindFirstChild("Head")
        if head then
            continuouslyUpdateHeadSiphon(head)
        end

        playerModel.ChildAdded:Connect(function(newChild)
            if newChild.Name == "Head" then
                continuouslyUpdateHeadSiphon(newChild)
            end
        end)
    end

    local function applyUpdatesToAllHeadSiphons()
        if LiveFolder then
            for _, playerModel in ipairs(LiveFolder:GetChildren()) do
                if playerModel:IsA("Model") then
                    monitorPlayerModel(playerModel)
                end
            end

            LiveFolder.ChildAdded:Connect(function(playerModel)
                if playerModel:IsA("Model") then
                    monitorPlayerModel(playerModel)
                end
            end)
        end
    end

    applyUpdatesToAllHeadSiphons()
end)
V:NewButton("Ocean Pulse", "", function()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local LiveFolder = workspace:FindFirstChild("Live")

    local function updateParticleColor(particleEmitter, color)
        particleEmitter.Color = ColorSequence.new(color)
    end

    local function updatePointLightColor(pointLight, color)
        pointLight.Color = color
    end

    local function updateSiphonAndGlowInRightHand(rightHand)
        for _, child in ipairs(rightHand:GetChildren()) do
            if child:IsA("ParticleEmitter") and child.Name == "Siphon" then
                updateParticleColor(child, Color3.fromRGB(0, 170, 255))
            elseif child:IsA("PointLight") and child.Name == "siphonGlow" then
                updatePointLightColor(child, Color3.fromRGB(0, 170, 255))
            end
        end
    end

    local function updateHeadSiphonInHead(head)
        for _, child in ipairs(head:GetChildren()) do
            if child:IsA("ParticleEmitter") and child.Name == "HeadSiphon" then
                updateParticleColor(child, Color3.fromRGB(0, 170, 255))
            end
        end

        head.ChildAdded:Connect(function(newChild)
            if newChild:IsA("ParticleEmitter") and newChild.Name == "HeadSiphon" then
                updateParticleColor(newChild, Color3.fromRGB(0, 170, 255))
            end
        end)
    end

    local function applyUpdatesToLocalPlayer()
        if LiveFolder then
            local playerModel = LiveFolder:FindFirstChild(LocalPlayer.Name)
            if playerModel then
                local rightHand = playerModel:FindFirstChild("RightHand")
                if rightHand then
                    updateSiphonAndGlowInRightHand(rightHand)
                end

                local head = playerModel:FindFirstChild("Head")
                if head then
                    updateHeadSiphonInHead(head)
                end
            end
        end
    end

    LocalPlayer.CharacterAdded:Connect(function(character)
        applyUpdatesToLocalPlayer()
    end)

    applyUpdatesToLocalPlayer()
end)

V:NewButton("Pink Pulse", "", function()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local LiveFolder = workspace:FindFirstChild("Live")

    local function updateParticleColor(particleEmitter, color)
        particleEmitter.Color = ColorSequence.new(color)
    end

    local function updatePointLightColor(pointLight, color)
        pointLight.Color = color
    end

    local function updateSiphonAndGlowInRightHand(rightHand)
        for _, child in ipairs(rightHand:GetChildren()) do
            if child:IsA("ParticleEmitter") and child.Name == "Siphon" then
                updateParticleColor(child, Color3.fromRGB(255, 85, 255))
            elseif child:IsA("PointLight") and child.Name == "siphonGlow" then
                updatePointLightColor(child, Color3.fromRGB(255, 85, 255))
            end
        end
    end

    local function updateHeadSiphonInHead(head)
        for _, child in ipairs(head:GetChildren()) do
            if child:IsA("ParticleEmitter") and child.Name == "HeadSiphon" then
                updateParticleColor(child, Color3.fromRGB(255, 85, 255))
            end
        end

        head.ChildAdded:Connect(function(newChild)
            if newChild:IsA("ParticleEmitter") and newChild.Name == "HeadSiphon" then
                updateParticleColor(newChild, Color3.fromRGB(255, 85, 255))
            end
        end)
    end

    local function applyUpdatesToLocalPlayer()
        if LiveFolder then
            local playerModel = LiveFolder:FindFirstChild(LocalPlayer.Name)
            if playerModel then
                local rightHand = playerModel:FindFirstChild("RightHand")
                if rightHand then
                    updateSiphonAndGlowInRightHand(rightHand)
                end

                local head = playerModel:FindFirstChild("Head")
                if head then
                    updateHeadSiphonInHead(head)
                end
            end
        end
    end

    LocalPlayer.CharacterAdded:Connect(function(character)
        applyUpdatesToLocalPlayer()
    end)

    applyUpdatesToLocalPlayer()
end)
V:NewButton("Ocean Beam", "", function()
    local P = game:GetService("Players")
    local R = game:GetService("ReplicatedStorage")
    local W = game:GetService("Workspace")
    local RS = game:GetService("RunService")

    local M = R:FindFirstChild("Misc")
    local ST = M and M:FindFirstChild("Siphon")

    local LP = P.LocalPlayer
    if not LP then
        return
    end

    local U = LP.Name
    local WL = W:FindFirstChild("Live")

    local rightHandParticle
    local rightHandGlow
    local beam
    local targetAttachment
    local currentTarget
    local headSiphon
    local rightHandSiphonActive = false

    local function check()
        for _, d in ipairs(WL:GetChildren()) do
            local e = d:FindFirstChild("PainInfliction")
            if e and e:IsA("Script") then
                local f = e:FindFirstChild("Witch")
                if f and f:IsA("StringValue") and f.Value == U then
                    return true
                end
            end
        end
        return false
    end

    local function setupRightHandSiphon()
        local g = WL:FindFirstChild(U)
        if g then
            if not rightHandParticle then
                if ST then
                    rightHandParticle = ST:Clone()
                    local rightHand = g:FindFirstChild("RightHand")
                    if rightHand then
                        rightHandParticle.Parent = rightHand

                        rightHandGlow = Instance.new("PointLight")
                        rightHandGlow.Name = "siphonGlow"
                        rightHandGlow.Color = Color3.fromRGB(0, 170, 255)
                        rightHandGlow.Range = 10
                        rightHandGlow.Brightness = 1
                        rightHandGlow.Parent = rightHand

                        local rightHandAttachment = Instance.new("Attachment")
                        rightHandAttachment.Name = "RightHandAttachment"
                        rightHandAttachment.Parent = rightHand

                        beam = Instance.new("Beam")
                        beam.Color = ColorSequence.new(Color3.fromRGB(0, 170, 255))
                        beam.Width0 = 0.1
                        beam.Width1 = 0.1
                        beam.LightEmission = 1
                        beam.LightInfluence = 0
                        beam.TextureSpeed = 0
                        beam.FaceCamera = true
                        beam.Attachment0 = rightHandAttachment
                        beam.Parent = rightHandParticle
                    end
                end
            end

            if rightHandParticle and rightHandGlow then
                rightHandParticle.Enabled = true
                rightHandGlow.Enabled = true
                rightHandSiphonActive = true
            end
        end
    end

    local function disableRightHandSiphon()
        if rightHandParticle then
            rightHandParticle.Enabled = false
        end
        if rightHandGlow then
            rightHandGlow.Enabled = false
        end
        if headSiphon then
            headSiphon.Enabled = false
        end
        rightHandSiphonActive = false
    end

    local function getTarget()
        local m = LP:GetMouse()
        local t = m.Target
        if t and t.Parent and t.Parent:IsA("Model") then
            local p = t.Parent
            if p and p:FindFirstChild("HumanoidRootPart") then
                return p
            end
        end
        return nil
    end

    local function updateTarget(p)
        if currentTarget and currentTarget:FindFirstChild("Head") then
            local previousHeadSiphon = currentTarget.Head:FindFirstChild("HeadSiphon")
            if previousHeadSiphon then
                previousHeadSiphon:Destroy()
            end
        end

        if targetAttachment then
            targetAttachment:Destroy()
            targetAttachment = nil
        end
        if beam then
            beam.Enabled = false
        end

        local targetModel = WL:FindFirstChild(p.Name)
        if targetModel and targetModel:FindFirstChild("HumanoidRootPart") then
            if not targetAttachment then
                targetAttachment = Instance.new("Attachment")
                targetAttachment.Name = "TargetAttachment"
                targetAttachment.Parent = targetModel:FindFirstChild("HumanoidRootPart")
            end

            beam.Attachment1 = targetAttachment
            beam.Enabled = true

            currentTarget = p

            if targetModel:FindFirstChild("Head") then
                headSiphon = ST:Clone()
                headSiphon.Name = "HeadSiphon"
                headSiphon.Parent = targetModel:FindFirstChild("Head")
                headSiphon.Enabled = rightHandSiphonActive
            end
        end
    end

    RS.RenderStepped:Connect(function()
        if check() then
            setupRightHandSiphon()
            if not currentTarget then
                local target = getTarget()
                if target then
                    updateTarget(target)
                end
            end
            if beam then
                beam.Enabled = true
            end
        else
            disableRightHandSiphon()
            currentTarget = nil
            if targetAttachment then
                targetAttachment:Destroy()
                targetAttachment = nil
            end
            if beam then
                beam.Enabled = false
            end
        end
    end)
end)
V:NewButton("Pulse Beam", "", function()
    local P = game:GetService("Players")
    local R = game:GetService("ReplicatedStorage")
    local W = game:GetService("Workspace")
    local RS = game:GetService("RunService")

    local M = R:FindFirstChild("Misc")
    local ST = M and M:FindFirstChild("Siphon")

    local LP = P.LocalPlayer
    if not LP then
        return
    end

    local U = LP.Name
    local WL = W:FindFirstChild("Live")

    local rightHandParticle
    local rightHandGlow
    local beam
    local targetAttachment
    local currentTarget
    local headSiphon
    local rightHandSiphonActive = false

    local function check()
        for _, d in ipairs(WL:GetChildren()) do
            local e = d:FindFirstChild("PainInfliction")
            if e and e:IsA("Script") then
                local f = e:FindFirstChild("Witch")
                if f and f:IsA("StringValue") and f.Value == U then
                    return true
                end
            end
        end
        return false
    end

    local function setupRightHandSiphon()
        local g = WL:FindFirstChild(U)
        if g then
            if not rightHandParticle then
                if ST then
                    rightHandParticle = ST:Clone()
                    local rightHand = g:FindFirstChild("RightHand")
                    if rightHand then
                        rightHandParticle.Parent = rightHand

                        rightHandGlow = Instance.new("PointLight")
                        rightHandGlow.Name = "siphonGlow"
                        rightHandGlow.Color = Color3.fromRGB(225, 85, 225)
                        rightHandGlow.Range = 10
                        rightHandGlow.Brightness = 1
                        rightHandGlow.Parent = rightHand

                        local rightHandAttachment = Instance.new("Attachment")
                        rightHandAttachment.Name = "RightHandAttachment"
                        rightHandAttachment.Parent = rightHand

                        beam = Instance.new("Beam")
                        beam.Color = ColorSequence.new(Color3.fromRGB(225, 85, 225))
                        beam.Width0 = 0.1
                        beam.Width1 = 0.1
                        beam.LightEmission = 1
                        beam.LightInfluence = 0
                        beam.TextureSpeed = 0
                        beam.FaceCamera = true
                        beam.Attachment0 = rightHandAttachment
                        beam.Parent = rightHandParticle
                    end
                end
            end

            if rightHandParticle and rightHandGlow then
                rightHandParticle.Enabled = true
                rightHandGlow.Enabled = true
                rightHandSiphonActive = true
            end
        end
    end

    local function disableRightHandSiphon()
        if rightHandParticle then
            rightHandParticle.Enabled = false
        end
        if rightHandGlow then
            rightHandGlow.Enabled = false
        end
        if headSiphon then
            headSiphon.Enabled = false
        end
        rightHandSiphonActive = false
    end

    local function getTarget()
        local m = LP:GetMouse()
        local t = m.Target
        if t and t.Parent and t.Parent:IsA("Model") then
            local p = t.Parent
            if p and p:FindFirstChild("HumanoidRootPart") then
                return p
            end
        end
        return nil
    end

    local function updateTarget(p)
        if currentTarget and currentTarget:FindFirstChild("Head") then
            local previousHeadSiphon = currentTarget.Head:FindFirstChild("HeadSiphon")
            if previousHeadSiphon then
                previousHeadSiphon:Destroy()
            end
        end

        if targetAttachment then
            targetAttachment:Destroy()
            targetAttachment = nil
        end
        if beam then
            beam.Enabled = false
        end

        local targetModel = WL:FindFirstChild(p.Name)
        if targetModel and targetModel:FindFirstChild("HumanoidRootPart") then
            if not targetAttachment then
                targetAttachment = Instance.new("Attachment")
                targetAttachment.Name = "TargetAttachment"
                targetAttachment.Parent = targetModel:FindFirstChild("HumanoidRootPart")
            end

            beam.Attachment1 = targetAttachment
            beam.Enabled = true

            currentTarget = p

            if targetModel:FindFirstChild("Head") then
                headSiphon = ST:Clone()
                headSiphon.Name = "HeadSiphon"
                headSiphon.Parent = targetModel:FindFirstChild("Head")
                headSiphon.Enabled = rightHandSiphonActive
            end
        end
    end

    RS.RenderStepped:Connect(function()
        if check() then
            setupRightHandSiphon()
            if not currentTarget then
                local target = getTarget()
                if target then
                    updateTarget(target)
                end
            end
            if beam then
                beam.Enabled = true
            end
        else
            disableRightHandSiphon()
            currentTarget = nil
            if targetAttachment then
                targetAttachment:Destroy()
                targetAttachment = nil
            end
            if beam then
                beam.Enabled = false
            end
        end
    end)
end)
WA:NewButton("Wearwolf Snap [V]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.V

    local function onInput(input, gameProcessedEvent)
        if gameProcessedEvent or input.UserInputType ~= Enum.UserInputType.Keyboard or input.KeyCode ~= keybind then
            return
        end

        local localPlayer = game.Players.LocalPlayer
        local mouse = localPlayer:GetMouse()

        if mouse.Target and mouse.Target.Parent then
            local targetPlayer = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
            if targetPlayer then
                local targetCharacter = targetPlayer.Character
                if targetCharacter then
                    local args = {
                        [1] = "NeckSnap",
                        [2] = {
                            [1] = targetCharacter
                        }
                    }
                    game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onInput)
end)
WA:NewButton("Turn", "", function()
    local Player = game.Players.LocalPlayer
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    
    local function turn()
        local args = {
            [1] = "Turn",
            [2] = {
                [1] = "Turn"
            }
        }
        ReplicatedStorage.Events.Werewolf:FireServer(unpack(args))
    end

    turn()
end)
WA:NewButton("Turn Back", "", function()
    local Player = game.Players.LocalPlayer
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    
    local function turnBack()
        local args = {
            [1] = "Turn",
            [2] = {
                [1] = "turnBack"
            }
        }
        ReplicatedStorage.Events.Werewolf:FireServer(unpack(args))
    end

    turnBack()
end)
CA:NewTextBox("Player Notifier", "", function(playerName)
    local Players = game:GetService("Players")
    local StarterGui = game:GetService("StarterGui")

    local notifiedPlayers = {}

    local function notifyOnPlayerJoin(targetPlayerName)
        local function checkForTarget()
            for _, player in ipairs(Players:GetPlayers()) do
                if player.Name:lower() == targetPlayerName:lower() then
                    StarterGui:SetCore("SendNotification", {
                        Title = "Player Notifier",
                        Text = targetPlayerName .. " is currently in the game!",
                        Duration = 5
                    })
                    notifiedPlayers[player.UserId] = true
                    return
                end
            end
        end

        checkForTarget()

        Players.PlayerAdded:Connect(function(player)
            if player.Name:lower() == targetPlayerName:lower() and not notifiedPlayers[player.UserId] then
                StarterGui:SetCore("SendNotification", {
                    Title = "Player Notifier",
                    Text = targetPlayerName .. " has joined the game!",
                    Duration = 5
                })
                notifiedPlayers[player.UserId] = true
            end
        end)

        Players.PlayerRemoving:Connect(function(player)
            if player.Name:lower() == targetPlayerName:lower() then
                notifiedPlayers[player.UserId] = false
            end
        end)
    end

    notifyOnPlayerJoin(playerName)
end)
CA:NewTextBox("Custom Name", "", function(NAME)
    _G.auto_name = true
    
    game.Players.LocalPlayer.CharacterAdded:Connect(function()
        while _G.auto_name do
            local args = { NAME }
            game:GetService("ReplicatedStorage").Events.FilterText:InvokeServer(unpack(args))
            wait()
        end
    end)
end)
CA:NewButton("Change Name", "", function()
    _G.auto_name = false
end)
CA:NewButton("Punch Keybind [F]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local keybind = Enum.KeyCode.F
    local ReplicatedStorage = game:GetService("ReplicatedStorage")

    local function onInput(input, gameProcessedEvent)
        if gameProcessedEvent or input.UserInputType ~= Enum.UserInputType.Keyboard or input.KeyCode ~= keybind then
            return
        end

        local localPlayer = game.Players.LocalPlayer
        local mouse = localPlayer:GetMouse()

        if mouse.Target and mouse.Target.Parent then
            local targetPlayer = game.Players:GetPlayerFromCharacter(mouse.Target.Parent)
            if targetPlayer and targetPlayer ~= localPlayer then
                local targetCharacter = targetPlayer.Character
                local targetHumanoid = targetCharacter and targetCharacter:FindFirstChildOfClass("Humanoid")

                if targetHumanoid then
                    local AnimationId = "rbxassetid://9205187244"
                    local Animation = Instance.new("Animation")
                    Animation.AnimationId = AnimationId

                    local humanoid = localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        local animator = humanoid:FindFirstChildOfClass("Animator")
                        if not animator then
                            animator = Instance.new("Animator")
                            animator.Parent = humanoid
                        end

                        local animationTrack = animator:LoadAnimation(Animation)
                        animationTrack:Play()

                        local args = {
                            [1] = "Punch",
                            [2] = {
                                [1] = false,
                                [2] = targetHumanoid
                            }
                        }
                        ReplicatedStorage.Events.Vampire:FireServer(unpack(args))
                    end
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(onInput)
end)
--[[
CA:NewButton("Punch Keybind [F]", "", function()
    local UserInputService = game:GetService("UserInputService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Workspace = game:GetService("Workspace")

    local function punchAction()
        local cam = Workspace.CurrentCamera
        local mousePos = UserInputService:GetMouseLocation()
        local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
        local players = {}
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                table.insert(players, player.Character)
            end
        end

        local raycastParams = RaycastParams.new()
        raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
        raycastParams.FilterDescendantsInstances = players
        raycastParams.IgnoreWater = true

        local raycastResult = Workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
        if raycastResult then
            for _, player in ipairs(Players:GetPlayers()) do
                if raycastResult.Instance:IsDescendantOf(player.Character) and player ~= LocalPlayer then
                    local AnimationId = "rbxassetid://9205187244"
                    local Animation = Instance.new("Animation")
                    Animation.AnimationId = AnimationId

                    local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        local animator = humanoid:FindFirstChildOfClass("Animator")
                        if not animator then
                            animator = Instance.new("Animator")
                            animator.Parent = humanoid
                        end

                        local animationTrack = animator:LoadAnimation(Animation)
                        animationTrack:Play()

                        local args = {
                            [1] = "Punch",
                            [2] = {
                                [1] = false,
                                [2] = player.Character:FindFirstChildOfClass("Humanoid")
                            }
                        }
                        ReplicatedStorage.Events.Vampire:FireServer(unpack(args))
                    end
                    return
                end
            end
        end
    end

    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.F then
            punchAction()
        end
    end)
end)
--]]
CA:NewButton("Resurrection Spell", "", function()
local Plr = game.Players.LocalPlayer
	local AnimationId = "6064411911"
	local Anim = Instance.new("Animation")
	Anim.AnimationId = "rbxassetid://"..AnimationId
	local k = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
	k:Play()
	k:AdjustSpeed(0.1)

local args = {
    [1] = "Come Back To Me Child!",
    [2] = "All"
}

game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))

workspace:WaitForChild("ResurrectionCircles"):WaitForChild("AstralisRes"):WaitForChild("ResEvent"):FireServer()
workspace:WaitForChild("ResurrectionCircles"):WaitForChild("AstralisRes"):WaitForChild("ResEvent"):FireServer()
workspace:WaitForChild("ResurrectionCircles"):WaitForChild("AstralisRes"):WaitForChild("ResEvent"):FireServer()
workspace:WaitForChild("ResurrectionCircles"):WaitForChild("AstralisRes"):WaitForChild("ResEvent"):FireServer()
workspace:WaitForChild("ResurrectionCircles"):WaitForChild("Resurrection"):WaitForChild("ResEvent"):FireServer()
workspace:WaitForChild("ResurrectionCircles"):WaitForChild("Resurrection"):WaitForChild("ResEvent"):FireServer()
workspace:WaitForChild("ResurrectionCircles"):WaitForChild("Resurrection"):WaitForChild("ResEvent"):FireServer()
workspace:WaitForChild("ResurrectionCircles"):WaitForChild("Resurrection"):WaitForChild("ResEvent"):FireServer()
for i,v in pairs(game.Workspace.ResurrectionCircles:GetChildren()) do
    for i,c in pairs(v:GetChildren()) do
        if c:IsA("RemoteEvent") then
            if game.Players.LocalPlayer.Character.Magic.Value >= 1 then
                c:FireServer()                
                c:FireServer()
                c:FireServer()
            end
        end
    end
end
wait(1)
k:Stop()
end)
CA:NewLabel("Area Skills")
local UserInputService = game:GetService("UserInputService")
local holdingMouse = false
local actionsExecuted = false
local function shouldExcludePlayer(player)
    local excludedPlayers = {"tissnoah", "Xwarescriptss"}
    return table.find(excludedPlayers, player.Name) ~= nil
end
CA:NewButton("Skyward Ascent", "", function()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local primaryPart = character:WaitForChild("HumanoidRootPart")

    local animation = Instance.new("Animation")
    animation.AnimationId = "rbxassetid://13486834039"
    local animationTrack = humanoid:LoadAnimation(animation)

    local bodyPosition = Instance.new("BodyPosition")
    bodyPosition.Position = primaryPart.Position + Vector3.new(0, 80, 0)
    bodyPosition.MaxForce = Vector3.new(0, 5000, 0)
    bodyPosition.Parent = primaryPart

    local function bringPlayer(targetCharacter)
        local event = game.ReplicatedStorage.Events:WaitForChild("Witch")
        event:FireServer("Magic", {"Motus", true, targetCharacter})
    end

    local function putOnFire(targetCharacter)
        local event = game.ReplicatedStorage.Events:WaitForChild("Witch")
        for i = 1, 2 do
            event:FireServer("Magic", {"FireSpell", targetCharacter})
        end
    end

    local function freeze(targetCharacter)
        local event = game.ReplicatedStorage.Events:WaitForChild("Witch")
        event:FireServer("Magic", {"Freeze", targetCharacter})
    end

    local function executeActions()
        if not actionsExecuted then
            for _, otherPlayer in pairs(game.Players:GetPlayers()) do
                if otherPlayer ~= player and not shouldExcludePlayer(otherPlayer) then
                    local targetCharacter = otherPlayer.Character
                    if targetCharacter and (targetCharacter.PrimaryPart.Position - primaryPart.Position).Magnitude <= 15 then
                        bringPlayer(targetCharacter)
                        freeze(targetCharacter)
                        putOnFire(targetCharacter)
                        actionsExecuted = true
                        break
                    end
                end
            end
        end
    end

    animationTrack:Play()
    holdingMouse = true
    executeActions()

    animationTrack.Stopped:Connect(function()
        bodyPosition:Destroy()
        holdingMouse = false
        actionsExecuted = false
    end)

    wait(5)
    animationTrack:Stop()
end)
CA:NewButton("Inferno Strike", "", function()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local function distance(point1, point2)
        return (point1 - point2).Magnitude
    end

    local function pushPlayersInRange()
        local pushRange = 15
        local localCharacter = LocalPlayer.Character
        if not localCharacter then return end

        local localPosition = localCharacter.PrimaryPart.Position

        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character and character ~= localCharacter and not shouldExcludePlayer(player) then
                local characterPosition = character.PrimaryPart.Position
                local dist = distance(localPosition, characterPosition)
                if dist <= pushRange then
                    local mag = (character.UpperTorso.Position - localCharacter.UpperTorso.Position).Magnitude
                    if mag < 15 then
                        local args = {
                            [1] = "Push",
                            [2] = {
                                [1] = character
                            }
                        }
                        ReplicatedStorage.Events.Witch:FireServer(unpack(args))
                    end
                end
            end
        end
    end

    local function ignitePlayersInRange()
        local fireRange = 15
        local localCharacter = LocalPlayer.Character
        if not localCharacter then return end

        local localPosition = localCharacter.PrimaryPart.Position

        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character and character ~= localCharacter and not shouldExcludePlayer(player) then
                local characterPosition = character.PrimaryPart.Position
                local dist = distance(localPosition, characterPosition)
                if dist <= fireRange then
                    local args = {
                        [1] = "Magic",
                        [2] = {
                            [1] = "FireSpell",
                            [2] = character
                        }
                    }
                    for _ = 1, 4 do
                        ReplicatedStorage.Events.Witch:FireServer(unpack(args))
                    end
                end
            end
        end
    end

    local AnimationId = "rbxassetid://7381251605"
    local Animation = Instance.new("Animation")
    Animation.AnimationId = AnimationId
    local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        local animator = humanoid:FindFirstChildOfClass("Animator")
        if not animator then
            animator = Instance.new("Animator")
            animator.Parent = humanoid
        end
        local animationTrack = animator:LoadAnimation(Animation)
        animationTrack:Play()

        local spellMessage = "Feel the burning flames of my warth!"
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spellMessage, "All")

        pushPlayersInRange()
        ignitePlayersInRange()
    end
end)
CA:NewButton("Enchanted Blast", "", function()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local animationId = "rbxassetid://6064411911"
    local animationTrack

    local function playAnimation(character, animationId)
        local Animation = Instance.new("Animation")
        Animation.AnimationId = animationId

        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animator = humanoid:FindFirstChildOfClass("Animator")
            if not animator then
                animator = Instance.new("Animator")
                animator.Parent = humanoid
            end

            animationTrack = animator:LoadAnimation(Animation)
            animationTrack:Play()
        end
        return animationTrack
    end

    local function getPlayersInRange(range)
        local playersInRange = {}
        local localCharacter = LocalPlayer.Character
        if not localCharacter then return playersInRange end

        local localPosition = localCharacter.PrimaryPart.Position

        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character and character ~= localCharacter and character.PrimaryPart then
                local characterPosition = character.PrimaryPart.Position
                local dist = (localPosition - characterPosition).Magnitude
                if dist <= range then
                    table.insert(playersInRange, player)
                end
            end
        end

        return playersInRange
    end

    local function updateParticleColor(particleEmitter, color)
        particleEmitter.Color = ColorSequence.new(color)
    end

    local function updatePointLightColor(pointLight, color)
        pointLight.Color = color
    end

    local function clearSiphonAndGlowInRightHand(rightHand)
        for _, child in ipairs(rightHand:GetChildren()) do
            if child:IsA("ParticleEmitter") and child.Name == "Paineffect" then
                child:Destroy()
            elseif child:IsA("PointLight") and child.Name == "Paineffect1" then
                child:Destroy()
            end
        end
    end

    local function updateSiphonAndGlowInRightHand(rightHand)
        clearSiphonAndGlowInRightHand(rightHand)

        local Siphon = ReplicatedStorage.Misc.Siphon:Clone()
        local Glow = ReplicatedStorage.Misc.siphonGlow:Clone()

        Siphon.Name = "Paineffect"
        Glow.Name = "Paineffect1"

        Siphon.Parent = rightHand
        Glow.Parent = rightHand

        updateParticleColor(Siphon, Color3.fromRGB(255, 255, 255))
        updatePointLightColor(Glow, Color3.fromRGB(255, 255, 255))

        Siphon.Enabled = true
        Glow.Enabled = true
    end

    local function disableSiphonAndGlow()
        local LiveFolder = workspace:FindFirstChild("Live")
        if LiveFolder then
            local playerModel = LiveFolder:FindFirstChild(LocalPlayer.Name)
            if playerModel then
                local rightHand = playerModel:FindFirstChild("RightHand")
                if rightHand then
                    for _, child in ipairs(rightHand:GetChildren()) do
                        if child:IsA("ParticleEmitter") and child.Name == "Paineffect" then
                            child.Enabled = false
                        elseif child:IsA("PointLight") and child.Name == "Paineffect1" then
                            child.Enabled = false
                        end
                    end
                end
            end
        end
    end

    local function triggerMagicSpell()
        local playersInRange = getPlayersInRange(15)

        if #playersInRange > 0 then
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ah Sha Lana", "All")

            local LiveFolder = workspace:FindFirstChild("Live")
            if LiveFolder then
                local playerModel = LiveFolder:FindFirstChild(LocalPlayer.Name)
                if playerModel then
                    local rightHand = playerModel:FindFirstChild("RightHand")
                    if rightHand then
                        updateSiphonAndGlowInRightHand(rightHand)
                    end
                end
            end

            playAnimation(LocalPlayer.Character, animationId)

            wait()

            local Event = ReplicatedStorage.Events.Witch
            local localPlayerPosition = LocalPlayer.Character.PrimaryPart.Position

            for _, player in ipairs(playersInRange) do
                local playerCharacter = player.Character
                local playerPosition = playerCharacter.PrimaryPart.Position
                local distance = (playerPosition - localPlayerPosition).Magnitude
                
                local args = {
                    [1] = "PainInflict",
                    [2] = {
                        playerCharacter
                    }
                }
                Event:FireServer(unpack(args))
            end

            wait(5)

            if animationTrack then
                animationTrack:Stop()
            end
            disableSiphonAndGlow()

            wait(5)
            local rightHand = LiveFolder:FindFirstChild(LocalPlayer.Name):FindFirstChild("RightHand")
            clearSiphonAndGlowInRightHand(rightHand)
        end
    end

    triggerMagicSpell()
end)
CA:NewButton("Forceful Blast", "", function()
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer

    local function distance(point1, point2)
        return (point1 - point2).Magnitude
    end

    local function pushPlayersInRange()
        local pushRange = 15
        local localCharacter = LocalPlayer.Character
        if not localCharacter then return end

        local localPosition = localCharacter.PrimaryPart.Position

        for _, player in ipairs(Players:GetPlayers()) do
            local character = player.Character
            if character and character ~= localCharacter and not shouldExcludePlayer(player) then
                local characterPosition = character.PrimaryPart.Position
                local dist = distance(localPosition, characterPosition)
                if dist <= pushRange then
                    local mag = (localCharacter.UpperTorso.Position - character.UpperTorso.Position).Magnitude
                    if mag < 15 then
                        local args = {
                            [1] = "Push",
                            [2] = {
                                [1] = character
                            }
                        }
                        ReplicatedStorage.Events.Witch:FireServer(unpack(args))
                    end
                end
            end
        end
    end

    local function playAnimation()
        local Animation = Instance.new("Animation")
        Animation.AnimationId = "rbxassetid://7238935846"
        local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animationTrack = humanoid:LoadAnimation(Animation)
            animationTrack:Play()
            wait(2)
            animationTrack:Stop()
        end
    end

    pushPlayersInRange()
    playAnimation()
end)
CA:NewButton("Glacial Grip", "", function()
    local Players = game:GetService("Players")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local TweenService = game:GetService("TweenService")
    local LocalPlayer = Players.LocalPlayer
    local Event = ReplicatedStorage:WaitForChild("Events"):WaitForChild("Witch")

    local frozenTargets = {}

    local function shouldExcludePlayer(player)
        local excludedPlayers = {"tissnoah", "Xwarescriptss"}
        return table.find(excludedPlayers, player.Name) ~= nil
    end

    local function play()
        local AnimationId = "4756401452"
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://" .. AnimationId

        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local animationTrack = humanoid:LoadAnimation(Anim)
            animationTrack:Play()
            return animationTrack
        end
    end

    local function effect(player)
        local character = player.Character or player.CharacterAdded:Wait()
        local freeze = Instance.new("Part")
        freeze.Name = "Freeze"
        freeze.Shape = Enum.PartType.Ball
        freeze.Size = Vector3.new(1, 1, 1)
        freeze.CanCollide = false
        freeze.Transparency = 0.5
        freeze.Material = Enum.Material.ForceField
        freeze.Color = Color3.fromRGB(0, 255, 255)

        local mesh = Instance.new("SpecialMesh", freeze)
        mesh.MeshType = Enum.MeshType.Sphere
        freeze.CFrame = character.HumanoidRootPart.CFrame

        freeze.Parent = character

        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://6077791509"
        sound.Parent = freeze
        sound:Play()

        local weld = Instance.new("WeldConstraint")
        weld.Part0 = freeze
        weld.Part1 = character.HumanoidRootPart
        weld.Parent = freeze

        local goal = {}
        goal.Size = Vector3.new(25, 25, 25)
        local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = TweenService:Create(freeze, tweenInfo, goal)
        tween:Play()

        tween.Completed:Connect(function()
            if freeze then
                freeze:Destroy()
            end
        end)

        return freeze
    end

    local function freezeTargets(targetCharacters)
        for _, targetCharacter in ipairs(targetCharacters) do
            if not frozenTargets[targetCharacter] then
                Event:FireServer("Magic", { "Freeze", targetCharacter })
                frozenTargets[targetCharacter] = true
            end
        end
    end

    local function hide(LocalPlayer)
        Event:FireServer("Magic", { "Invisibility", LocalPlayer })
    end

    local function push(targetCharacter)
        Event:FireServer("Push", { targetCharacter })
    end

    local function getPlayersWithinRange()
        local targets = {}
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and not shouldExcludePlayer(player) then
                local mag = (LocalPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
                if mag < 25 then
                    table.insert(targets, player.Character)
                end
            end
        end
        return targets
    end

    local function trackAndFreezeTargets(freeze, character)
        while freeze.Parent do
            local targets = getPlayersWithinRange()
            freezeTargets(targets)
            wait(0.5)
        end
    end

    local function trackMovement(freeze, character)
        local lastPosition = character.HumanoidRootPart.Position
        while freeze.Parent do
            local currentPosition = character.HumanoidRootPart.Position
            if (currentPosition - lastPosition).magnitude > 0 then
                freeze:Destroy()
                break
            end
            lastPosition = currentPosition
            wait(0.1)
        end
    end

    local targets = getPlayersWithinRange()
    if #targets > 0 then
        local animationTrack = play()
        local freeze = effect(LocalPlayer)
        push(targetCharacter)
        freezeTargets(targets)

        spawn(function()
            trackMovement(freeze, LocalPlayer.Character)
        end)

        spawn(function()
            trackAndFreezeTargets(freeze, LocalPlayer.Character)
        end)

        wait(2)
        if animationTrack then
            animationTrack:Stop()
        end
        if freeze and freeze.Parent then
            freeze:Destroy()
        end
        frozenTargets = {}
    end
end)
CA:NewButton("Heretic Siphon", "", function()
    local Player = game.Players.LocalPlayer
    local Character = Player.Character
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local Event = ReplicatedStorage:FindFirstChild("Events") and ReplicatedStorage.Events:FindFirstChild("Witch")
    
    if Event then
        for i = 1, 5 do
            local A_1 = "SelfSiphon"
            Event:FireServer(A_1)
        end
    end
end)
CA:NewLabel("Custom Spells")
local Player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Events = ReplicatedStorage.Events

local excludedPlayers = {
    ["tissnoah"] = true,
    ["Xwarescriptss"] = true
}
local function playAnimation(character, animationId)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        local animation = Instance.new("Animation")
        animation.AnimationId = animationId
        local animationTrack = humanoid:LoadAnimation(animation)
        animationTrack:Play()
        return animationTrack
    end
end
CA:NewButton("Enough!", "", function()
    local db = true
    local animationId = "rbxassetid://5422859012"

    Player.Chatted:Connect(function(chat)
        local low = string.lower(chat)
        if string.find(low, "enough!") then
            local Plr = game.Players.LocalPlayer
            for _, Player in pairs(game.Players:GetPlayers()) do
                if Player.Character ~= nil and Player ~= Plr and not excludedPlayers[Player.Name] then
                    local mag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                    if mag < 10 then
                        local Target = Player.Character or Player.CharacterAdded:Wait()
                        local Event = Events.Witch

                        Event:FireServer("Magic", {"FireSpell", Target})
                        Event:FireServer("Magic", {"Silence", Target})
                        Event:FireServer("Magic", {"Freeze", Target})
                        Event:FireServer("Magic", {"Motus", false, Target})

                        playAnimation(Plr.Character, animationId)
                    end

                    local punchMag = (Player.Character.UpperTorso.Position - Plr.Character.UpperTorso.Position).magnitude
                    if punchMag < math.huge then
                        local punchTarget = Player.Character or Player.CharacterAdded:Wait()
                        local args = {
                            [1] = "Punch",
                            [2] = {
                                [1] = false,
                                [2] = punchTarget.Humanoid
                            }
                        }
            
                        game:GetService("ReplicatedStorage").Events.Vampire:FireServer(unpack(args))
                    end
                end
            end
        end
    end)
end)

CA:NewButton("Silence", "", function()
    local db = true
    local animationId = "rbxassetid://4756427378"
    local animationTrack = nil

    Player.Chatted:Connect(function(chat)
        local low = string.lower(chat)
        if string.find(low, "silence!") then
            local localPlayer = game.Players.LocalPlayer
            
            for _, player in pairs(game.Players:GetPlayers()) do
                if player.Character and player ~= localPlayer and not excludedPlayers[player.Name] then
                    local mag = (player.Character.UpperTorso.Position - localPlayer.Character.UpperTorso.Position).Magnitude
                    if mag < math.huge then
                        local target = player.Character or player.CharacterAdded:Wait()
                        local event = Events.Witch

                        event:FireServer("Magic", {"Silence", target})

                        animationTrack = playAnimation(localPlayer.Character, animationId)

                        spawn(function()
                            wait(10)
                            if animationTrack then
                                animationTrack:Stop()
                            end
                        end)
                    end
                end
            end
        end
    end)
end)
function playAnimation(character, animationId)
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        local animation = Instance.new("Animation")
        animation.AnimationId = animationId
        local animationTrack = humanoid:LoadAnimation(animation)
        animationTrack:Play()
        return animationTrack
    end
    return nil
end
local function store()
    local player = game.Players.LocalPlayer
    return player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.CFrame
end
local function tele(cframe)
    local player = game.Players.LocalPlayer
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = cframe
    end
end
local function store()
    local player = game.Players.LocalPlayer
    return player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.CFrame
end

local function tele(cframe)
    local player = game.Players.LocalPlayer
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = cframe
    end
end
CS:NewButton("Spawn as Qetsiyah", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Qetsiyah"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Bonnie", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Bonnie Bennett"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Hope", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Hope Mikaelson"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Freya", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Freya Mikaelson"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Davina", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Davina Claire"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Genevieve", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Genevieve"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewLabel("More Witches Coming Soon!")
CS:NewLabel("Vampires")
CS:NewButton("Spawn as Kol", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Kol Mikaelson"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Finn", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Finn Mikaelson"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Katherine", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Katherine Pierce"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Tristan", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Tristan de Martel"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Aurora", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.2)
    local args = {"Aurora de Martel"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Stefan", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Stefan Salvatore"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Elena", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Elena Gilbert"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewLabel("Heretics")
CS:NewButton("Spawn as Oscar", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Oscar"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Beau", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Beau"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Lizzie", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Lizzie Saltzman"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Josie", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Josie Saltzman"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Valerie", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Valerie Tulle"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Mary", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Mary Louise"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Nora", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Nora Hildegard"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewLabel("Hybrids")
CS:NewButton("Spawn as Niklaus", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Niklaus Mikaelson"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Hayley", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Hayley Marshall"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewLabel("Werewolves")
CS:NewButton("Spawn as Jules", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Jules"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Tyler", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Tyler Lockwood"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Mason", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Mason Lockwood"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Rafael", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Rafael Waithe"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
CS:NewButton("Spawn as Jed", "", function()
    local cframe = store()
    local Event = game:GetService("ReplicatedStorage").Events.Respawn
    Event:FireServer()
    wait(0.4)
    local args = {"Jed Tien"}
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Morph"):FireServer(unpack(args))
    wait(0.3)
    tele(cframe)
end)
-- TriadUpdates
CR:NewLabel("[+] 🌀 Added White Pulse for OtherSide & Mass Pain")
CR:NewLabel("[=] 🔒 Better Security/Whitelist updates")
CR:NewLabel("---------------------------------------")
CR:NewLabel("Future Updates:")
CR:NewLabel("[~] Auto Character Stake")
CR:NewLabel("---------------------------------------")
CR:NewLabel("Script Credits:")
CR:NewLabel("Scripting: tisnoah")
CR:NewLabel("Scripting: vxtrz1_23388")
CR:NewLabel("UI: tisnoah")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local witch = ReplicatedStorage.Events.Witch
local vamp = ReplicatedStorage.Events.Vampire

local playerNames = {"", ""}
local loop = false

local function GetCharacter(name)
    name = name:lower()
    for _, player in pairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            if player.Name:lower():find(name) then
                return character
            end
            if character:FindFirstChild("CharacterName") then
                local characterName = character.CharacterName.Value:lower()
                if characterName:find(name) then
                    return character
                end
            end
        end
    end
    return nil
end

local function tele(character)
    local HumanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if HumanoidRootPart then
        LocalPlayer.Character:SetPrimaryPartCFrame(HumanoidRootPart.CFrame + Vector3.new(0, 3, 0))
    end
end

local function combo(targetCharacter)
    witch:FireServer("Magic", {"Motus", true, targetCharacter})
    witch:FireServer("Magic", {"SleepSpell", targetCharacter})
    witch:FireServer("Magic", {"Freeze", targetCharacter})
end

local function flingtele()
    local originalCFrame = LocalPlayer.Character.PrimaryPart.CFrame
    LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-375, -268, -4865))
    wait(0.1)
    LocalPlayer.Character:SetPrimaryPartCFrame(originalCFrame)
end

local function perform(power)
    for _, playerName in ipairs(playerNames) do
        if playerName ~= "" then
            local targetCharacter = GetCharacter(playerName)
            
            if targetCharacter then
                if power == "Teleport" then
                    tele(targetCharacter)
                elseif power == "Bring" then
                    witch:FireServer("Magic", {"Motus", true, targetCharacter})
                elseif power == "Burn" then
                    for _ = 1, 4 do
                        witch:FireServer("Magic", {"FireSpell", targetCharacter})
                    end
                elseif power == "Sleep" then
                    witch:FireServer("Magic", {"SleepSpell", targetCharacter})
                elseif power == "AntiFire" then
                    loop = true
                    local fireHandled = false
                    
                    while loop do
                        if targetCharacter:FindFirstChild("UpperTorso") and targetCharacter.UpperTorso:FindFirstChild("Flames") then
                            if not fireHandled then
                                witch:FireServer("Magic", {"NoFire", targetCharacter})
                                fireHandled = true
                            end
                        else
                            fireHandled = false
                        end
                        wait(0.5)
                    end
                elseif power == "Delfan" then
                    witch:FireServer("Magic", {"TelekineticHeart", targetCharacter})
                elseif power == "Pain" then
                    witch:FireServer("PainInflict", targetCharacter)
                elseif power == "Push" then
                    witch:FireServer("Push", targetCharacter)
                elseif power == "Channel" then
                    witch:FireServer("Magic", {"requestChanneling", targetCharacter})
                elseif power == "Snap" then
                    witch:FireServer("Magic", {"SnapNeck", targetCharacter})
                elseif power == "Heal" then
                    vamp:FireServer("Heal", targetCharacter)
                elseif power == "Unglitch" then
                    witch:FireServer("Magic", {"Freeze", targetCharacter})
                    witch:FireServer("PainInflict", targetCharacter)
                elseif power == "Errox" then
                    for i = 1, 5 do
                        witch:FireServer("Magic", {"BreakLeg", targetCharacter})
                    end
                elseif power == "Explode" then
                    witch:FireServer("Magic", {"Explosion", targetCharacter.HumanoidRootPart.Position})
                elseif power == "Fling" then
                    witch:FireServer("Magic", {"Motus", true, targetCharacter})
                    combo(targetCharacter)
                    wait(0.1)
                    flingtele()
                elseif power == "Vervain Body" then
                    while task.wait(120) do
                        if not targetCharacter:FindFirstChild("VervainBody") then
                            local A_1 = "Magic"
                            local A_2 = {
                                [1] = "VervainBody",
                                [2] = targetCharacter
                            }
                            witch:FireServer(A_1, A_2)
                        end
                    end
                end
            end
        end
    end
end

local function clearUsernames()
    for i = 1, 2 do
        playerNames[i] = ""
        GS:SetTextBoxText("Target Username " .. i, "")
    end
end

for i = 1, 2 do
    GS:NewTextBox("Target Username " .. i, "Enter a target name", function(input)
        playerNames[i] = input
    end)
end

local actions = {
    {"Bring", "Bring the target to you"},
    {"Burn", "Burn the target"},
    {"Pain", "Pain the target"},
    {"Push", "Push the target"},
    {"Errox", "Errox Femus the target"},
    {"Snap", "Snap the target"},
    {"Sleep", "Put the target to sleep"},
    {"Channel", "Let you channel the target"},
    {"Vervain Body", "Add vervain to the target"},
    {"Delfan", "Delfan your target"},
    {"Explode", "Boom your target"},
    {"Fling", "Fling the target"},
    {"AntiFire", "Add antifire to the target"},
    {"Remove AntiFire", "Stop AntiFire Loop on target"},
    {"Unglitch", "Unglitch the target"},
    {"Teleport", "Teleport to the target"},
    {"Heal", "Heal the target"},
    {"Feed", "Feed on the target"},
    {"Clear Usernames", "Clear all entered usernames"}
}

for _, action in ipairs(actions) do
    local actionName = action[1]
    local actionDesc = action[2]
    
    if actionName == "Clear Usernames" then
        GS:NewButton(actionName, actionDesc, function()
            clearUsernames()
        end)
    elseif actionName == "Remove AntiFire" then
        GS:NewButton(actionName, actionDesc, function()
            loop = false
        end)
    else
        GS:NewButton(actionName, actionDesc, function()
            perform(actionName)
        end)
    end
end

MainGUI:NewKeybind("GUI Toggle", "", Enum.KeyCode.Tab, function()
    Library:ToggleUI()
end)
