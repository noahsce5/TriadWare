local prefix = "!"
local player = game.Players.LocalPlayer
local Players = game:GetService("Players")
local witch = game.ReplicatedStorage.Events.Witch
local activeBurns = {}
local originalCFrame

local customNames = {
    lily = "XWareScripts",
    maddy = "oumfx"
}

local function GetCharacterOrPlayer(name)
    name = name:lower()
    local partialMatch = nil
    for _, player in pairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            if player.Name:lower():match(name) then
                return character
            end

            if character:FindFirstChild("CharacterName") then
                local characterName = character.CharacterName.Value:lower()
                if characterName:match(name) then
                    return character
                elseif characterName:find(name, 1, true) then
                    partialMatch = character
                end
            end
        end
    end
    return partialMatch
end

local function GetPlayerByUsername(username)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name:lower():match(username:lower()) then
            return player
        end
    end
    return nil
end

local function GetCharacterByName(characterName)
    for _, player in ipairs(Players:GetPlayers()) do
        local character = player.Character
        if character and character:FindFirstChild("CharacterName") and character.CharacterName.Value:lower() == characterName:lower() then
            return character
        end
    end
    return nil
end

local function GetPlayer(name)
    local result
    local lowerName = name:lower()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower():sub(1, #name) == lowerName or (player.Character and player.Character:FindFirstChild("CharacterName") and player.Character.CharacterName.Value:lower():sub(1, #name) == lowerName) then
            result = player
        end
    end
    if name == "me" then
        result = game.Players.LocalPlayer
    end
    if name == "" or name == " " then
        result = nil
    end
    return result
end

local function getRandomPlayer()
    local players = Players:GetPlayers()
    if #players > 1 then
        local randomIndex
        repeat
            randomIndex = math.random(1, #players)
        until players[randomIndex] ~= player
        return players[randomIndex]
    end
    return nil
end

local function flingtele()
    originalCFrame = player.Character.PrimaryPart.CFrame
    player.Character:SetPrimaryPartCFrame(CFrame.new(-375, -268, -4865))
    wait(0.1)
    player.Character:SetPrimaryPartCFrame(originalCFrame)
end

local function combo(targetCharacter)
    witch:FireServer("Magic", {"SleepSpell", targetCharacter})
    witch:FireServer("Magic", {"Freeze", targetCharacter})
end

local function fling(targetCharacter)
    witch:FireServer("Magic", {"Motus", true, targetCharacter})
    combo(targetCharacter)
    flingtele()
end

local function BurnPlayer(targetCharacter)
    for i = 1, 6 do
        witch:FireServer("Magic", {"FireSpell", targetCharacter})
        wait()
    end
end

local function antifire(targetPlayer)
    local c = targetPlayer.Character
    while wait(0.5) do
        if _G.stop == true then
            return
        end
        if c.UpperTorso:FindFirstChild("Flames") then
            witch:FireServer("Magic", {"NoFire", c})
        end
    end
end

local function handleChat(message)
    local lowerMessage = message:lower()
    if string.sub(lowerMessage, 1, 3) == "/e " then
        message = string.sub(message, 4)
    end
    if string.sub(lowerMessage, 1, 1) == prefix then
        local command, target = message:match("!([%w_]+)%s*([%w_]*)")
        if customNames[target] then
            target = customNames[target]
        end
        if command == "fling" then
            local targetCharacter = GetCharacterOrPlayer(target)
            if targetCharacter then
                fling(targetCharacter)
            end
        elseif command == "burn" then
            local targetCharacterName = target
            if targetCharacterName then
                local targetCharacter = GetCharacterOrPlayer(targetCharacterName)
                if targetCharacter then
                    BurnPlayer(targetCharacter)
                end
            end
        elseif command == "autoburn" then
            local targetCharacterName = target
            if targetCharacterName then
                local targetCharacter = GetCharacterOrPlayer(targetCharacterName)
                if targetCharacter and not activeBurns[targetCharacter] then
                    activeBurns[targetCharacter] = true
                    local startTime = tick()
                    while activeBurns[targetCharacter] and tick() - startTime < 30 do
                        BurnPlayer(targetCharacter)
                        wait(0.6)
                    end
                    activeBurns[targetCharacter] = nil
                end
            end
        elseif command == "to" then
            if target == "random" then
                local randomPlayer = getRandomPlayer()
                if randomPlayer then
                    player.Character:SetPrimaryPartCFrame(randomPlayer.Character.PrimaryPart.CFrame)
                end
            else
                local targetPlayer = GetPlayer(target)
                if targetPlayer then
                    player.Character:SetPrimaryPartCFrame(targetPlayer.Character.PrimaryPart.CFrame)
                else
                    local targetCharacter = GetCharacterOrPlayer(target)
                    if targetCharacter then
                        player.Character:SetPrimaryPartCFrame(targetCharacter.PrimaryPart.CFrame)
                    end
                end
            end
        elseif command == "channel" then
            if d[command] then
                return
            end
            task.spawn(function()
                d[command] = true
                wait(1)
                d[command] = false
            end)
            local targetPlayer = GetPlayer(target)
            if targetPlayer then
                local channelingArgs = {
                    [1] = "Magic",
                    [2] = {
                        [1] = "requestChanneling",
                        [2] = targetPlayer.Character
                    }
                }
                witch:FireServer(unpack(channelingArgs))
            end
        elseif command == "unglitch" then
            if d[command] then
                return
            end
            task.spawn(function()
                d[command] = true
                wait(1)
                d[command] = false
            end)
            local targetPlayer = GetPlayer(target)
            if targetPlayer then
                local argsFreeze = {
                    "Magic",
                    {
                        "Freeze",
                        targetPlayer.Character
                    }
                }
                local argsPainInflict = {
                    "PainInflict",
                    {
                        targetPlayer.Character
                    }
                }
                witch:FireServer(unpack(argsFreeze))
                witch:FireServer(unpack(argsPainInflict))
            end
        elseif command == "antifire" then
            local targetPlayer = GetPlayer(target)
            if targetPlayer then
                antifire(targetPlayer)
            end
        end
    end
end

player.Chatted:Connect(handleChat)
